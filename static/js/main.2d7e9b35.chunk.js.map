{"version":3,"sources":["components/Form.module.css","components/Form.js","components/PaymentModal.js","components/AnalysisSection.js","api.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Form","_ref","onSubmit","formData","setFormData","useState","name","gender","calendarType","year","month","day","hour","minute","province","city","years","Array","from","length","_","i","days","hours","toString","padStart","minutes","provinces","citydata","filter","item","pid","cities","filteredCities","selectedProvince","find","prov","id","_jsxs","e","preventDefault","alert","genders","solarDate","lunarMonth","isLeap","startsWith","lunarDate","window","p","Lunar2Solar","selectedCity","c","J","j","W","w","eightCharacter","transformUserData","raw","datetimeStr","txt","sz","join","xb","dyItems","Object","keys","a","push","fatemaps","parseInt","className","styles","formContainer","children","_jsx","formRow","inputGroup","type","placeholder","underlineInput","value","onChange","target","buttonGroup","map","choiceButton","active","onClick","formRow1","dateSelectGroup","dateSelect","index","timeSelectGroup","formRow3","style","marginRight","disabled","submitButton","PaymentModal","isOpen","qrcodeUrl","onClose","expiresAt","calculateInitialCountdown","useCallback","Math","max","floor","Date","now","countdown","setCountdown","useEffect","timer","setInterval","prev","clearInterval","_Fragment","QRCodeSVG","size","fgColor","level","color","seconds","ANALYSIS_TYPES","icon","AnalysisSection","_ANALYSIS_TYPES$find","preview","unlocked","contents","onUnlock","onRefresh","onGoBack","onComplete","displayContent","setDisplayContent","blurContent","setBlurContent","selectedType","setSelectedType","loadingType","setLoadingType","isShared","setIsShared","isCopied","setIsCopied","error","setError","analysisProgress","setAnalysisProgress","health","career","wealth","marriage","generatingTypes","setGeneratingTypes","contentStuck","setContentStuck","progressIntervals","useRef","contentUpdateRef","stuckTimers","handleRefresh","handleUnlock","async","typeId","current","interval","prevProgress","currentProgress","min","handleTypeSelection","contentRef","watermarkImage","Image","src","typesToUpdate","forEach","newProgress","newGenerating","includes","currentSelectedType","currentGeneratingTypes","currentContentStuck","clearTimeout","setTimeout","currentTimer","currentProgressIntervals","currentStuckTimers","values","splitIndex","slice","ref","ReactMarkdown","navigator","clipboard","writeText","location","href","confirm","err","backgroundColor","width","Error","canvas","html2canvas","useCORS","allowTaint","logging","watermarkCanvas","document","createElement","ctx","getContext","height","drawImage","fillStyle","font","textAlign","textBaseline","fillText","complete","globalAlpha","finalUrl","toDataURL","fileName","toLocaleDateString","link","download","body","appendChild","click","removeChild","propsAreEqual","prevProps","nextProps","JSON","stringify","React","memo","BASE_URL","createEventSourceWithRetry","url","handlers","es","maxRetries","arguments","undefined","retryCount","connect","EventSource","onopen","onerror","_handlers$onError","close","onError","call","fetchAnalysisContent","prevOrderId","analysisType","analysisOrderId","response","options","timeout","controller","AbortController","timeoutId","abort","fetch","signal","ok","errorText","text","fetchWithTimeout","data","json","content","message","App","analysisData","setAnalysisData","currentOrderId","analysisOrderIds","paymentInfo","paymentState","setPaymentState","show","processingType","loading","setLoading","setES","progress","setProgress","storage","useMemo","save","localStorage","setItem","load","getItem","parsedData","parse","removeItem","savePaymentInfo","key","console","loadPaymentInfo","initialAnalysisState","loadedData","orderId","cleanupInterval","alt","existingPayment","paymentES","initiatePayment","safeParseJson","defaultValue","_handlers$onError6","addEventListener","_handlers$onPaymentQR","onPaymentQR","_handlers$onPaymentst","onPaymentstatus","_handlers$onAnalysisC","onAnalysisChunk","_handlers$onAnalysisE","onAnalysisEnd","_handlers$onError7","_handlers$onError8","createdAt","chunk","analysisTypes","clearAnalysisData","progressInterval","newES","createOrderStream","eightCharacters","encodeURIComponent","_handlers$onStream","onStream","_handlers$onError2","_handlers$onComplete","_handlers$onError3","_handlers$onError4","_handlers$onError5","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"0LACAA,EAAOC,QAAU,CAAC,cAAgB,4BAA4B,QAAU,sBAAsB,SAAW,uBAAuB,SAAW,uBAAuB,WAAa,yBAAyB,eAAiB,6BAA6B,SAAW,uBAAuB,YAAc,0BAA0B,aAAe,2BAA2B,OAAS,qBAAqB,gBAAkB,8BAA8B,WAAa,yBAAyB,gBAAkB,8BAA8B,gBAAkB,8BAA8B,WAAa,yBAAyB,aAAe,2B,wIC2TpmBC,MAxTFC,IAAmB,IAAlB,SAAEC,GAAUD,EACxB,MAAOE,EAAUC,GAAeC,mBAAS,CACvCC,KAAM,GACNC,OAAQ,SACRC,aAAc,eACdC,KAAM,GACNC,MAAO,GACPC,IAAK,GACLC,KAAM,KACNC,OAAQ,KACRC,SAAU,GACVC,KAAM,KAIFC,EAAQC,MAAMC,KAAK,CAACC,OAAQ,MAAM,CAACC,EAAGC,IAAM,KAAOA,IAEnDC,EAAOL,MAAMC,KAAK,CAACC,OAAQ,KAAK,CAACC,EAAGC,IAAMA,EAAI,IAe9CE,EAAQN,MAAMC,KAAK,CAACC,OAAQ,KAAK,CAACC,EAAGC,IAAMA,EAAEG,WAAWC,SAAS,EAAG,OACpEC,EAAUT,MAAMC,KAAK,CAACC,OAAQ,KAAK,CAACC,EAAGC,IAAMA,EAAEG,WAAWC,SAAS,EAAG,OAEtEE,EAAYC,EAASb,KAAKc,QAAOC,GAAqB,IAAbA,EAAKC,MAC9CC,EAASJ,EAASb,KAAKc,QAAOC,GAAqB,IAAbA,EAAKC,MAc3CE,EAAiBD,EAAOH,QAAOd,IACnC,MAAMmB,EAAmBP,EAAUQ,MAAKC,GAAQA,EAAK9B,OAASH,EAASW,WACvE,OAAOoB,GAAoBnB,EAAKgB,MAAQG,EAAiBG,EAAE,IA+G7D,OACEC,eAAA,QAAMpC,SA3GYqC,IAKpB,GAJAA,EAAEC,kBAIGrC,EAASM,OAASN,EAASO,QAAUP,EAASQ,IAEjD,YADA8B,MAAM,gEAGR,GAA0B,YAAtBtC,EAASW,UAA4C,YAAlBX,EAASY,KAE9C,YADA0B,MAAM,gEAKR,IAAIC,EAEFA,EADsB,WAApBvC,EAASI,OACD,EAEE,EAWd,IAAIoC,EACAC,EARa,CACf,eAAM,EAAG,eAAM,EAAG,eAAM,EAAG,eAAM,EAAG,eAAM,EAAG,eAAM,EACnD,eAAM,EAAG,eAAM,EAAG,eAAM,EAAG,eAAM,GAAI,qBAAO,GAAI,qBAAO,GACvD,qBAAO,EAAG,qBAAO,EAAG,qBAAO,EAAG,qBAAO,EAAG,qBAAO,EAAG,qBAAO,EACzD,qBAAO,EAAG,qBAAO,EAAG,qBAAO,EAAG,qBAAO,GAAI,2BAAQ,GAAI,2BAAQ,IAIrCzC,EAASO,OAC/BmC,GAAS,EACb,GAA8B,iBAA1B1C,EAASK,aAAuB,CAE9BL,EAASO,MAAMoC,WAAW,YAC5BD,GAAS,GAEX,MAAME,EAAYC,OAAOC,EAAEC,YAAY/C,EAASM,KAAMmC,EAAYzC,EAASQ,IAAKkC,GAEhF,IAAkB,IAAdE,EAEF,YADAN,MAAM,sEAGRE,EAAY,CAAElC,KAAMsC,EAAU,GAAIrC,MAAOqC,EAAU,GAAIpC,IAAKoC,EAAU,GAGxE,MACEJ,EAAa,CAAElC,KAAMN,EAASM,KAAMC,MAAOP,EAASO,MAAOC,IAAKR,EAASQ,KAG3E,MAAMwC,EAAenB,EAAOG,MAAKiB,GAAKA,EAAE9C,OAASH,EAASY,OAC1D,IAAKoC,EAEH,YADAV,MAAM,gEAGR,MAAMY,EAAIF,EAAaG,EACjBC,EAAIJ,EAAaK,EA2CjBC,EA7BoBC,EAACC,EAAKC,KAC9B,IAAIC,EAAM,GAGVA,GAAO,iCAAUD,EAAc,KAC/BC,GAAO,qBACPA,GAAOF,EAAIG,GAAGC,KAAK,MAAQ,KAE3BF,GAAO,qBAAQF,EAAIK,GAAK,KAExBH,GAAO,qBACP,IAAII,EAAU,GAEd,IAAK,IAAI5C,EAAI,EAAGA,EAAI,GAAKsC,EAAQ,IAAKtC,EAAI6C,OAAOC,KAAKR,EAAQ,IAAGxC,OAAQE,IAAK,CAC5E,IAAI+C,EAAIT,EAAQ,GAAEtC,GAClB4C,EAAQI,KAAK,GAAGD,EAAQ,OAAIA,EAAQ,OACtC,CAEA,OADAP,GAAOI,EAAQ9C,OAAS,EAAI8C,EAAQF,KAAK,MAAQ,KAAO,mCACjDF,CAAG,EAWWH,CAzCCV,OAAOC,EAAEqB,SAC/B5B,EACAC,EAAUlC,KACVkC,EAAUjC,MACViC,EAAUhC,IACV4D,SAASpE,EAASS,MAClB2D,SAASpE,EAASU,QAClB,EACAwC,EACAE,GAyBkB,CAClBpD,EAASG,KACTqC,EAAUlC,KACVkC,EAAUjC,MACViC,EAAUhC,IACV,GAAG4D,SAASpE,EAASS,SAAS2D,SAASpE,EAASU,QAAQW,WAAWC,SAAS,EAAG,QAC/EsC,KAAK,MAGP7D,EAAUuD,EAAe,EAKOe,UAAWC,IAAOC,cAAcC,SAAA,CAE5DC,cAAA,OAAKJ,UAAWC,IAAOI,QAAQF,SAC7BC,cAAA,OAAKJ,UAAWC,IAAOK,WAAWH,SAChCC,cAAA,SACEG,KAAK,OACLC,YAAY,qEACZR,UAAWC,IAAOQ,eAClBC,MAAO/E,EAASG,KAChB6E,SAAW5C,GAAMnC,EAAY,IAAID,EAAUG,KAAMiC,EAAE6C,OAAOF,cAMhE5C,eAAA,OAAKkC,UAAWC,IAAOI,QAAQF,SAAA,CAC7BC,cAAA,OAAKJ,UAAWC,IAAOY,YAAYV,SAChC,CAAC,SAAK,UAAKW,KAAK/E,GACfqE,cAAA,UAEEG,KAAK,SACLP,UAAW,GAAGC,IAAOc,gBACnBpF,EAASI,SAAWA,EAASkE,IAAOe,OAAS,KAE/CC,QAASA,IAAMrF,EAAY,IAAID,EAAUI,WAASoE,SAEjDpE,GAPIA,OAWXqE,cAAA,OAAKJ,UAAWC,IAAOY,YAAYV,SAChC,CAAC,eAAM,gBAAMW,KAAKP,GACjBH,cAAA,UAEEG,KAAK,SACLP,UAAW,GAAGC,IAAOc,gBACnBpF,EAASK,eAAiBuE,EAAON,IAAOe,OAAS,KAEnDC,QAASA,IAAMrF,EAAY,IAAID,EAAUK,aAAcuE,IAAOJ,SAE7DI,GAPIA,UAcbH,cAAA,OAAKJ,UAAWC,IAAOiB,SAASf,SAC9BrC,eAAA,OAAKkC,UAAWC,IAAOkB,gBAAgBhB,SAAA,CACvCrC,eAAA,UACI4C,MAAO/E,EAASM,KAChB0E,SAAW5C,GAAMnC,EAAY,IAAID,EAAUM,KAAM8B,EAAE6C,OAAOF,QAC1DV,UAAWC,IAAOmB,WAAWjB,SAAA,CAE7BC,cAAA,UAAQM,MAAM,GAAEP,SAAC,WAChB3D,EAAMsE,KAAK7E,GACVmE,cAAA,UAAmBM,MAAOzE,EAAKkE,SAAElE,GAApBA,QAGjB6B,eAAA,UACE4C,MAAO/E,EAASO,MAChByE,SAAW5C,GAAMnC,EAAY,IAAID,EAAUO,MAAO6B,EAAE6C,OAAOF,QAC3DV,UAAWC,IAAOmB,WAAWjB,SAAA,CAE7BC,cAAA,UAAQM,MAAM,GAAEP,SAAC,YAhNK,iBAA1BxE,EAASK,aACJ,CACL,eAAM,eAAM,eAAM,eAAM,eAAM,eAC9B,eAAM,eAAM,eAAM,eAAM,qBAAO,qBAC/B,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBACnC,qBAAO,qBAAO,qBAAO,qBAAO,2BAAQ,4BAGjCS,MAAMC,KAAK,CAACC,OAAQ,KAAK,CAACC,EAAGC,IAAMA,EAAI,KAyMhBiE,KAAI,CAAC5E,EAAOmF,IAChCjB,cAAA,UAAoBM,MAAOxE,EAAMiE,SAAEjE,GAAtBmF,QAGjBvD,eAAA,UACE4C,MAAO/E,EAASQ,IAChBwE,SAAW5C,GAAMnC,EAAY,IAAID,EAAUQ,IAAK4B,EAAE6C,OAAOF,QACzDV,UAAWC,IAAOmB,WAAWjB,SAAA,CAE7BC,cAAA,UAAQM,MAAM,GAAEP,SAAC,WAChBrD,EAAKgE,KAAK3E,GACTiE,cAAA,UAAkBM,MAAOvE,EAAIgE,SAAEhE,GAAlBA,aAOrBiE,cAAA,OAAKJ,UAAWC,IAAOI,QAAQF,SAC7BrC,eAAA,OAAKkC,UAAWC,IAAOqB,gBAAgBnB,SAAA,CACrCC,cAAA,UACEM,MAAO/E,EAASS,KAChBuE,SAAW5C,GAAMnC,EAAY,IAAID,EAAUS,KAAM2B,EAAE6C,OAAOF,QAC1DV,UAAWC,IAAOmB,WAAWjB,SAE5BpD,EAAM+D,KAAK1E,GACV0B,eAAA,UAAmB4C,MAAOtE,EAAK+D,SAAA,CAAE/D,EAAK,WAAzBA,OAIjBgE,cAAA,UACEM,MAAO/E,EAASU,OAChBsE,SAAW5C,GAAMnC,EAAY,IAAID,EAAUU,OAAQ0B,EAAE6C,OAAOF,QAC5DV,UAAWC,IAAOmB,WAAWjB,SAE5BjD,EAAQ4D,KAAKzE,GACZyB,eAAA,UAAqB4C,MAAOrE,EAAO8D,SAAA,CAAE9D,EAAO,WAA/BA,YAQrByB,eAAA,OAAKkC,UAAWC,IAAOsB,SAASpB,SAAA,CAC9BrC,eAAA,UACE4C,MAAO/E,EAASW,SAChBqE,SA9OsB5C,IAC5BnC,EAAY,IACPD,EACHW,SAAUyB,EAAE6C,OAAOF,MACnBnE,KAAM,WACN,EA0OIyD,UAAWC,IAAOQ,eAClBe,MAAO,CAAEC,YAAa,QAAStB,SAAA,CAE/BC,cAAA,UAAQM,MAAM,UAASP,SAAC,6BACvBhD,EAAU2D,KAAIxE,GACb8D,cAAA,UAA0BM,MAAOpE,EAASR,KAAKqE,SAAE7D,EAASR,MAA7CQ,EAASuB,SAI1BC,eAAA,UACE4C,MAAO/E,EAASY,KAChBoE,SAlPkB5C,IACxBnC,EAAY,IAAKD,EAAUY,KAAMwB,EAAE6C,OAAOF,OAAQ,EAkP5CV,UAAWC,IAAOQ,eAClBiB,UAAW/F,EAASW,UAAkC,YAAtBX,EAASW,SAAuB6D,SAAA,CAEhEC,cAAA,UAAQM,MAAM,UAASP,SACE,YAAtBxE,EAASW,SAAyB,iCAAU,6BAE9CmB,EAAeqD,KAAIvE,GAClB6D,cAAA,UAAsBM,MAAOnE,EAAKT,KAAKqE,SAAE5D,EAAKT,MAAjCS,EAAKsB,YAOxBuC,cAAA,OAAKJ,UAAWC,IAAOI,QAAQF,SAC7BC,cAAA,UAAQG,KAAK,SAASP,UAAWC,IAAO0B,aAAaxB,SAAC,yDAInD,E,cCtNIyB,MA5FMnG,IAAgD,IAA/C,OAAEoG,EAAM,UAAEC,EAAS,QAAEC,EAAO,UAAEC,GAAWvG,EAE7D,MAAMwG,EAA4BC,uBAAY,KAC5C,GAAIF,EAAW,CAEb,OADsBG,KAAKC,IAAI,EAAGD,KAAKE,OAAOL,EAAYM,KAAKC,OAAS,KAE1E,CACA,OAAO,GAAG,GACT,CAACP,KAEGQ,EAAWC,GAAgB5G,mBAASoG,KAG3CS,qBAAU,KACJb,GACFY,EAAaR,IACf,GACC,CAACJ,EAAQI,IAGZS,qBAAU,KACR,IAAKb,EAAQ,OAEb,MAAMc,EAAQC,aAAY,KACxBH,GAAaI,GACPA,GAAQ,GACVC,cAAcH,GACP,GAEFE,EAAO,GACd,GACD,KAEH,MAAO,IAAMC,cAAcH,EAAM,GAChC,CAACd,IASJ,OAAKA,EAGHzB,cAAA,OAAKJ,UAAU,gBAAeG,SAC5BrC,eAAA,OAAKkC,UAAU,gBAAeG,SAAA,CAC5BrC,eAAA,OAAKkC,UAAU,eAAcG,SAAA,CAC3BC,cAAA,MAAAD,SAAI,sCACJC,cAAA,UAAQJ,UAAU,eAAeiB,QAASc,EAAQ5B,SAAC,YAGrDC,cAAA,OAAKJ,UAAU,iBAAgBG,SAC5B2B,EACChE,eAAAiF,WAAA,CAAA5C,SAAA,CACEC,cAAC4C,IAAS,CACRtC,MAAOoB,EACPmB,KAAM,IACNC,QAASV,GAAa,EAAI,UAAY,UACtCW,MAAM,MAER/C,cAAA,KAAGJ,UAAU,YAAYwB,MAAO,CAAC4B,MAAOZ,GAAa,EAAI,UAAY,WAAWrC,SAC7EqC,GAAa,EAAI,uCAAW,8BA1BvBa,EA0B2Cb,EAvBtD,GAFML,KAAKE,MAAMgB,EAAU,QACrBA,EAAU,IACArG,WAAWC,SAAS,EAAG,UAyBnCuF,GAAa,GACZ1E,eAAA,OAAKkC,UAAU,iBAAgBG,SAAA,CAC7BC,cAAA,KAAAD,SAAG,mFACHC,cAAA,UAAQa,QAASc,EAAS/B,UAAU,eAAcG,SAAC,mCAKzDC,cAAA,OAAKJ,UAAU,UAASG,SAAC,oDAI7BC,cAAA,OAAKJ,UAAU,eAAcG,SAC3BC,cAAA,KAAAD,SAAG,wHAnCS,KANAkD,KA4CZ,E,+BClFV,MAAMC,EAAiB,CACrB,CAAEzF,GAAI,SAAU/B,KAAM,2BAAQyH,KAAM,eAAMH,MAAO,WACjD,CAAEvF,GAAI,SAAU/B,KAAM,2BAAQyH,KAAM,eAAMH,MAAO,WACjD,CAAEvF,GAAI,SAAU/B,KAAM,2BAAQyH,KAAM,eAAMH,MAAO,WACjD,CAAEvF,GAAI,WAAY/B,KAAM,2BAAQyH,KAAM,eAAMH,MAAO,YAG/CI,EAAkB/H,IAAiF,IAADgI,EAAA,IAA/E,QAAEC,EAAO,SAAEC,EAAQ,SAAEC,EAAQ,SAAEC,EAAQ,UAAEC,EAAS,SAAEC,EAAQ,WAAEC,GAAYvI,EACjG,MAAOwI,EAAgBC,GAAqBrI,mBAAS,KAC9CsI,EAAaC,GAAkBvI,mBAAS,KACxCwI,EAAcC,GAAmBzI,mBAAS,OAC1C0I,EAAaC,GAAkB3I,mBAAS,OACxC4I,EAAUC,GAAe7I,oBAAS,IAClC8I,EAAUC,GAAe/I,oBAAS,IAClCgJ,EAAOC,GAAYjJ,mBAAS,KAC5BkJ,EAAkBC,GAAuBnJ,mBAAS,CACvDoJ,OAAQ,EACRC,OAAQ,EACRC,OAAQ,EACRC,SAAU,KAELC,EAAiBC,GAAsBzJ,mBAAS,CACrDoJ,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,UAAU,KAELG,EAAcC,GAAmB3J,mBAAS,CAC/CoJ,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,UAAU,IAENK,EAAoBC,iBAAO,CAAC,GAC5BC,EAAmBD,iBAAO,CAC9BT,QAAQ,EACRC,QAAQ,EACRC,QAAQ,EACRC,UAAU,IAENQ,EAAcF,iBAAO,CAAC,GAEtBG,EAAgB3D,uBAAa3B,IACjCuD,EAAUvD,GACViF,GAAgB3C,IAAI,IACfA,EACH,CAACtC,IAAO,KACP,GACF,CAACuD,IAEEgC,EAAe5D,uBAAY6D,UAC/B,IAAIpC,EAASqC,KAAWzB,EAExB,IACEC,EAAewB,GACfhB,GAAoBnC,IAAI,IACnBA,EACH,CAACmD,GAAS,MAGZV,GAAmBzC,IAAI,IAClBA,EACH,CAACmD,IAAS,MAGRP,EAAkBQ,QAAQD,IAC5BlD,cAAc2C,EAAkBQ,QAAQD,IAG1C,MAAME,EAAWtD,aAAY,KAC3BoC,GAAoBmB,IAClB,MAAMC,EAAkBD,EAAaH,GAErC,OAAIL,EAAiBM,QAAQD,IAAWI,GAAmB,IACzDtD,cAAcoD,GACPC,GAGF,IACFA,EACH,CAACH,GAAS7D,KAAKkE,IAAID,EAAkB,EAAG,IACzC,GACD,GACD,KAEHX,EAAkBQ,QAAQD,GAAUE,QAE9BrC,EAASmC,GACf1B,EAAgB0B,EAClB,CAAE,MAAOnB,GACPC,EAAS,oDACThC,cAAc2C,EAAkBQ,QAAQD,IACxChB,GAAoBnC,IAAI,IACnBA,EACH,CAACmD,GAAS,MAEZV,GAAmBzC,IAAI,IAClBA,EACH,CAACmD,IAAS,MAEZxB,EAAe,KACjB,IACC,CAACb,EAAUY,EAAaV,IAErByC,EAAsBpE,uBAAa8D,IACnCrC,EAASqC,GACX1B,EAAgB0B,GAEhBF,EAAaE,EACf,GACC,CAACrC,EAAUmC,IAERS,EAAab,iBAAO,MACpBc,EAAiBd,iBAAO,IAAIe,OAElC/D,qBAAU,KACR8D,EAAeP,QAAQS,IAAM,aAAa,GACzC,IAEHhE,qBAAU,KACR,MAAMiE,EAAgB,GAEtBjH,OAAOC,KAAKiE,GAAUgD,SAAQrG,IACxBqD,EAASrD,KAAUoF,EAAiBM,QAAQ1F,IAAS8E,EAAgB9E,KACvEoG,EAAc9G,KAAKU,GACnBoF,EAAiBM,QAAQ1F,IAAQ,EACnC,IAGEoG,EAAchK,OAAS,IACzBqI,GAAoBnC,IAClB,MAAMgE,EAAc,IAAIhE,GAIxB,OAHA8D,EAAcC,SAAQrG,IACpBsG,EAAYtG,GAAQ,GAAG,IAElBsG,CAAW,IAGpBvB,GAAmBzC,IACjB,MAAMiE,EAAgB,IAAIjE,GAI1B,OAHA8D,EAAcC,SAAQrG,IACpBuG,EAAcvG,IAAQ,CAAK,IAEtBuG,CAAa,IAGlBH,EAAcI,SAASxC,IACzBC,EAAe,MAGjBmC,EAAcC,SAAQrG,IAChBkF,EAAkBQ,QAAQ1F,KAC5BuC,cAAc2C,EAAkBQ,QAAQ1F,IACxCkF,EAAkBQ,QAAQ1F,GAAQ,KACpC,IAEJ,GACC,CAACqD,EAAUW,EAAac,IAE3B3C,qBAAU,KAER,MAAMsE,EAAsB3C,EACtB4C,EAAyB5B,EACzB6B,EAAsB3B,EAE5B,GAAIyB,GAAuBC,EAAuBD,KAAyBE,EAAoBF,GAAsB,CAC/GpB,EAAYK,QAAQe,IACtBG,aAAavB,EAAYK,QAAQe,IAGnC,MAAMrE,EAAQyE,YAAW,KACnBH,EAAuBD,IACzBxB,GAAgB3C,IAAI,IACfA,EACH,CAACmE,IAAsB,KAE3B,GACC,KAEHpB,EAAYK,QAAQe,GAAuBrE,EAG3C,MAAM0E,EAAe1E,EAErB,MAAO,KAELwE,aAAaE,EAAa,CAE9B,IACC,CAAChD,EAAcgB,EAAiBE,IAEnC7C,qBAAU,KAER,MAAM4E,EAA2B,IAAK7B,EAAkBQ,SAClDsB,EAAqB,IAAK3B,EAAYK,SAE5C,MAAO,KAELvG,OAAO8H,OAAOF,GAA0BV,SAAQV,IAC1CA,GAAUpD,cAAcoD,EAAS,IAGvCxG,OAAO8H,OAAOD,GAAoBX,SAAQjE,IACpCA,GAAOwE,aAAaxE,EAAM,GAC9B,CACH,GACA,IAEHD,qBAAU,KACHgB,GACHJ,EAAesD,SAAQrG,IACrBoF,EAAiBM,QAAQ1F,EAAK1C,KAAM,CAAK,GAE7C,GACC,CAAC6F,IAmGJ,OARAhB,qBAAU,KACR,GAAuB,kBAAZgB,GAAwBA,EAAQ/G,OAAS,EAAG,CACrD,MAAM8K,EAAatF,KAAKE,MAAuB,GAAjBqB,EAAQ/G,QACtCuH,EAAkBR,EAAQgE,MAAM,EAAGD,IACnCrD,EAAeV,EAAQgE,MAAMD,GAC/B,IACC,CAAC/D,IAGF5F,eAAA,OAAKkC,UAAU,qBAAqB2H,IAAKpB,EAAWpG,SAAA,CACjD0E,GACC/G,eAAA,OAAKkC,UAAU,gBAAgBiB,QAASA,IAAM6D,EAAS,IAAI3E,SAAA,CAAC,UACvD0E,KAIPzE,cAAA,MAAAD,SAAI,yCAEF6D,EAGAlG,eAAA,OAAKkC,UAAU,kBAAiBG,SAAA,CAC9BC,cAACwH,IAAa,CAAAzH,SAAE8D,IACfE,GACC/D,cAAA,OAAKJ,UAAW,iBAAiBqE,GAAgBI,EAAY,WAAa,UAAWtE,SACnFC,cAACwH,IAAa,CAAAzH,SAAEgE,SANtB/D,cAACwH,IAAa,CAAAzH,SAAEuD,IAYjBM,GACClG,eAAAiF,WAAA,CAAA5C,SAAA,CACErC,eAAA,OAAKkC,UAAU,gBAAeG,SAAA,GACzBkE,GAAgBI,IACjB3G,eAAA,OAAKkC,UAAU,kBAAiBG,SAAA,CAC9BC,cAAA,UACEa,QA9HI8E,UAClB,UACQ8B,UAAUC,UAAUC,UAAUvJ,OAAOwJ,SAASC,MACpDrD,GAAY,GAEZwC,YAAWrB,UACT,UAC0BvH,OAAO0J,QAC7B,iKAGAxD,GAAY,EAEhB,CAAE,MAAOyD,GACPrD,EAAS,uCACX,IACC,KAEHsC,YAAW,IAAMxC,GAAY,IAAQ,IACvC,CAAE,MAAOuD,GACPrD,EAAS,0GACTsC,YAAWrB,UACT,UAC0BvH,OAAO0J,QAC7B,yHAGAxD,GAAY,EAEhB,CAAE,MAAOyD,GACPrD,EAAS,uCACX,IACC,IACL,GA8Fc9E,UAAU,gBAAeG,SAC1B,kEAGDC,cAAA,QAAMJ,UAAU,UAASG,SAAC,kGAI7BwE,GACCvE,cAAA,OAAKJ,UAAU,gBAAeG,SAAC,2EAMnCC,cAAA,OAAKJ,UAAU,mBAAkBG,SAC9BmD,EAAexC,KAAKP,GACnBzC,eAAA,OAEEkC,UAAW,mBACT2D,EAASpD,EAAK1C,IAAM,WAAa,YAC/BwG,IAAiB9D,EAAK1C,GAAK,SAAW,KAC1C2D,MAAO,CAAE4G,gBAAiB7H,EAAK6C,OAC/BnC,QAASA,IAAMqF,EAAoB/F,EAAK1C,IAAIsC,SAAA,CAE5CrC,eAAA,OAAKkC,UAAU,gBAAeG,SAAA,CAC5BC,cAAA,QAAMJ,UAAU,OAAMG,SAAEI,EAAKgD,OAC7BnD,cAAA,MAAAD,SAAKI,EAAKzE,UAEZsE,cAAA,OAAKJ,UAAU,gBAAeG,SAC3BoE,IAAgBhE,EAAK1C,IAAMwH,EAAgB9E,EAAK1C,IACjB,IAA9BkH,EAAiBxE,EAAK1C,IACpBuC,cAAA,OAAKJ,UAAU,gBAAeG,SAAC,0BAE/BrC,eAAAiF,WAAA,CAAA5C,SAAA,CACEC,cAAA,OAAKJ,UAAU,8BAA6BG,SAC1CC,cAAA,OACEJ,UAAU,wBACVwB,MAAO,CAAE6G,MAAO,GAAGtD,EAAiBxE,EAAK1C,YAG7CC,eAAA,OAAKkC,UAAU,+BAA8BG,SAAA,CAAE4E,EAAiBxE,EAAK1C,IAAI,UAG3E8F,EAASpD,EAAK1C,IAChB+F,EAASrD,EAAK1C,IAAM,4BAAUuC,cAAA,OAAKJ,UAAU,WAE7C,6BA7BCO,EAAK1C,QAoCfwG,GAAgBT,EAASS,IACxBvG,eAAA,OAAKkC,UAAU,iBAAgBG,SAAA,CAC7BrC,eAAA,OAAKkC,UAAU,gBAAeG,SAAA,CAC5BC,cAAA,MAAAD,SAA0D,QAA1DsD,EAAKH,EAAe3F,MAAK4C,GAAQA,EAAK1C,KAAOwG,WAAa,IAAAZ,OAAA,EAArDA,EAAuD3H,OAC3DyJ,EAAalB,IACZjE,cAAA,UACEJ,UAAU,iBACViB,QAASA,IAAM4E,EAAcxB,GAAclE,SAC5C,6CAKLC,cAACwH,IAAa,CAAAzH,SAAEyD,EAASS,WAKjCjE,cAAA,UAAQJ,UAAU,qBAAqBiB,QAAS8C,EAAS5D,SAAC,oCAG1DC,cAAA,UAAQJ,UAAU,2BAA2BiB,QAtKxB8E,UACvB,IACE,IAAKQ,EAAWN,QACd,MAAM,IAAIqC,MAAM,0DAGlB,MAAMC,QAAeC,IAAYjC,EAAWN,QAAS,CACnDwC,SAAS,EACTC,YAAY,EACZC,SAAS,EACTP,gBAAiB,YAGbQ,EAAkBC,SAASC,cAAc,UACzCC,EAAMH,EAAgBI,WAAW,MAEvCJ,EAAgBP,MAAQE,EAAOF,MAC/BO,EAAgBK,OAASV,EAAOU,OAEhCF,EAAIG,UAAUX,EAAQ,EAAG,GAEzBQ,EAAII,UAAY,UAChBJ,EAAIK,KAAO,4BACXL,EAAIM,UAAY,SAChBN,EAAIO,aAAe,MACnBP,EAAIQ,SAAS,2GAAsChB,EAAOF,MAAQ,EAAG,IAEjE7B,EAAeP,QAAQuD,WACzBT,EAAIU,YAAc,GAClBV,EAAIG,UACF1C,EAAeP,QACfsC,EAAOF,MAAQ,IACf,IACA,IACA,MAIJ,MAAMqB,EAAWd,EAAgBe,UAAU,aAErCC,EAAW,yCAAU,IAAItH,MAAOuH,2BAChCC,EAAOjB,SAASC,cAAc,KACpCgB,EAAK7B,KAAOyB,EACZI,EAAKC,SAAWH,EAChBf,SAASmB,KAAKC,YAAYH,GAC1BA,EAAKI,QACLrB,SAASmB,KAAKG,YAAYL,EAE5B,CAAE,MAAOjF,GACPC,EAAS,2EACX,GAoHyE3E,SAAC,0CAIxErC,eAAA,OAAKkC,UAAU,aAAYG,SAAA,CACzBC,cAAA,KAAAD,SAAG,4IACHC,cAAA,KAAAD,SAAG,2IAED,EAIJiK,EAAgBA,CAACC,EAAWC,IAE9BD,EAAU3G,UAAY4G,EAAU5G,SAChC2G,EAAUrG,aAAesG,EAAUtG,YACnCuG,KAAKC,UAAUH,EAAU1G,YAAc4G,KAAKC,UAAUF,EAAU3G,WAChE4G,KAAKC,UAAUH,EAAUzG,YAAc2G,KAAKC,UAAUF,EAAU1G,UAIrD6G,UAAMC,KAAKlH,EAAiB4G,G,MC5b3C,MAAMO,EAAY,2BAGZC,EAA6B,SAACC,EAAKC,GAA8B,IAEjEC,EAF6CC,EAAUC,UAAAtO,OAAA,QAAAuO,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAC1DE,EAAa,EAGjB,MAAMC,EAAUA,KACdL,EAAK,IAAIM,YAAYR,GAErBE,EAAGO,OAAS,KACVH,EAAa,CAAC,EAGhBJ,EAAGQ,QAAWpD,IAOJ,IAADqD,EANHL,EAAaH,GACfG,IACA/D,YAAW,KACT2D,EAAGU,QACHL,GAAS,GACR,IAAOD,KAEM,QAAhBK,EAAAV,EAASY,eAAO,IAAAF,GAAhBA,EAAAG,KAAAb,EAAmB,6EACnBC,EAAGU,QACL,EAGKV,GAGT,OAAOK,GACT,EA+HaQ,EAAuB7F,MAAO8F,EAAaC,EAAcC,KACpE,MAAMlB,EAAM,GAAGF,gBAAuBkB,mBAA6BC,qBAAgCC,IAEnG,IACE,MAAMC,QAhIejG,eAAO8E,GAAwC,IAAnCoB,EAAOhB,UAAAtO,OAAA,QAAAuO,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGiB,EAAOjB,UAAAtO,OAAA,QAAAuO,IAAAD,UAAA,GAAAA,UAAA,GAAG,IAC3D,MAAMkB,EAAa,IAAIC,gBACjBC,EAAYjF,YAAW,IAAM+E,EAAWG,SAASJ,GAEvD,IACE,MAAMF,QAAiBO,MAAM1B,EAAK,IAC7BoB,EACHO,OAAQL,EAAWK,SAIrB,GAFArF,aAAakF,IAERL,EAASS,GAAI,CAChB,MAAMC,QAAkBV,EAASW,OACjC,MAAM,IAAIrE,MAAMoE,GAAa,2BAC/B,CAEA,OAAOV,CACT,CAAE,MAAOnH,GACP,GAAmB,eAAfA,EAAM/I,KACR,MAAM,IAAIwM,MAAM,oDAElB,MAAMzD,CACR,CACF,CAyG2B+H,CAAiB/B,GAClCgC,QAAab,EAASc,OAC5B,GAAS,OAAJD,QAAI,IAAJA,MAAME,QACT,MAAM,IAAIzE,MAAM,oDAElB,OAAOuE,EAAKE,OACd,CAAE,MAAOlI,GACP,MAAM,IAAIyD,MAAM,qDAAezD,EAAMmI,QACvC,GCnKI1J,EAAiB,CACrB,CAAEzF,GAAI,SAAU/B,KAAM,4BACtB,CAAE+B,GAAI,SAAU/B,KAAM,4BACtB,CAAE+B,GAAI,SAAU/B,KAAM,4BACtB,CAAE+B,GAAI,WAAY/B,KAAM,6BAqcXmR,MAlcf,WACE,MAAOC,EAAcC,GAAmBtR,mBAAS,CAC/CuR,eAAgB,KAChB1J,QAAS,GACTC,SAAU,CAAC,EACXC,SAAU,CACRqB,OAAQ,KACRC,OAAQ,KACRC,OAAQ,KACRC,SAAU,MAEZiI,iBAAkB,CAChBpI,OAAQ,KACRC,OAAQ,KACRC,OAAQ,KACRC,SAAU,MAEZkI,YAAa,CACXrI,OAAQ,KACRC,OAAQ,KACRC,OAAQ,KACRC,SAAU,SAGPmI,EAAcC,GAAmB3R,mBAAS,CAC/C4R,MAAM,EACN3L,UAAW,GACX4L,eAAgB,KAChB1L,UAAW,QAEN2L,EAASC,GAAc/R,oBAAS,IAChCgJ,EAAOC,GAAYjJ,mBAAS,KAC5BkP,EAAI8C,GAAShS,mBAAS,OACtBiS,EAAUC,GAAelS,mBAAS,GAEnCmS,EAAUC,mBAAQ,MACtBC,KAAOrB,IACL,GAAoB,kBAATA,GAA8B,OAATA,EAE9B,OADA/H,EAAS,uEACF,EAGT,IAEE,OADAqJ,aAAaC,QAAQ,eAAgB7D,KAAKC,UAAUqC,KAC7C,CACT,CAAE,MAAOhI,GAEP,OADAC,EAAS,2GACF,CACT,GAGFuJ,KAAMA,KACJ,IACE,MAAMxB,EAAOsB,aAAaG,QAAQ,gBAClC,IAAKzB,EAAM,OAAO,KAElB,MAAM0B,EAAahE,KAAKiE,MAAM3B,GAE9B,GACwB,kBAAf0B,GACQ,OAAfA,GAC8B,kBAAvBA,EAAW7K,SACa,kBAAxB6K,EAAW5K,UACa,kBAAxB4K,EAAW3K,UACmB,kBAA9B2K,EAAWnB,gBACqB,kBAAhCmB,EAAWlB,iBAMlB,OAHKkB,EAAWjB,cACdiB,EAAWjB,YAAc,CAAErI,OAAQ,KAAMC,OAAQ,KAAMC,OAAQ,KAAMC,SAAU,OAE1EmJ,EAGT,MAAM,IAAIjG,MAAM,6CAClB,CAAE,MAAOzD,GAEP,OADAsJ,aAAaM,WAAW,gBACjB,IACT,GAIFC,gBAAiBA,CAACnO,EAAM+M,KACtB,IACE,MAAMqB,EAAM,WAAWpO,IAMvB,OALoB,OAAhB+M,EACFa,aAAaM,WAAWE,GAExBR,aAAaC,QAAQO,EAAKpE,KAAKC,UAAU8C,KAEpC,CACT,CAAE,MAAOzI,GAEP,OADA+J,QAAQ/J,MAAM,mDAAYA,IACnB,CACT,GAGFgK,gBAAkBtO,IAChB,IACE,MAAMoO,EAAM,WAAWpO,IACjBsM,EAAOsB,aAAaG,QAAQK,GAClC,OAAK9B,EAEEtC,KAAKiE,MAAM3B,GAFA,IAGpB,CAAE,MAAOhI,GAEP,OADAsJ,aAAaM,WAAW,WAAWlO,KAC5B,IACT,MAEA,CAACuE,IAECgK,EAAuB,CAC3B1B,eAAgB,KAChB1J,QAAS,GACTC,SAAU,CAAC,EACXC,SAAU,CAAEqB,OAAQ,GAAIC,OAAQ,GAAIC,OAAQ,GAAIC,SAAU,IAC1DiI,iBAAkB,CAAEpI,OAAQ,KAAMC,OAAQ,KAAMC,OAAQ,KAAMC,SAAU,MACxEkI,YAAa,CAAErI,OAAQ,KAAMC,OAAQ,KAAMC,OAAQ,KAAMC,SAAU,OAqQrE,OAxEA1C,qBAAU,KACJwK,EAAaxJ,SACfsK,EAAQE,KAAKhB,EACf,GACC,CAACA,EAAcc,IAElBtL,qBAAU,KACR,MAAMqM,EAAaf,EAAQK,OAK3B,OAJIU,GACF5B,EAAgB4B,GAGX,KACDhE,GACFA,EAAGU,OACL,CACD,GACA,CAACV,EAAIiD,IAGRtL,qBAAU,KAERY,EAAesD,SAAQrG,IACrB,MAAM+M,EAAcU,EAAQa,gBAAgBtO,EAAK1C,IAC7CyP,IAEEA,EAAYtL,UAAYM,KAAKC,MAC/B4K,GAAgBtK,IAAI,IACfA,EACHyK,YAAa,IACRzK,EAAKyK,YACR,CAAC/M,EAAK1C,IAAKyP,GAEbD,iBAAkB,IACbxK,EAAKwK,iBACR,CAAC9M,EAAK1C,IAAKyP,EAAY0B,aAK3BhB,EAAQU,gBAAgBnO,EAAK1C,GAAI,MAErC,GACA,GACD,CAACmQ,IAGJtL,qBAAU,KACR,MAAMuM,EAAkBrM,aAAY,KAClC,MAAML,EAAMD,KAAKC,MAEjBe,EAAesD,SAAQrG,IACrB,MAAM+M,EAAcU,EAAQa,gBAAgBtO,EAAK1C,IAC7CyP,GAAeA,EAAYtL,UAAYO,IAEzCyL,EAAQU,gBAAgBnO,EAAK1C,GAAI,MAGjCsP,GAAgBtK,IAAI,IACfA,EACHyK,YAAa,IACRzK,EAAKyK,YACR,CAAC/M,EAAK1C,IAAK,UAGjB,GACA,GACD,KAEH,MAAO,IAAMiF,cAAcmM,EAAgB,GAC1C,CAACjB,IAGFlQ,eAAA,OAAKkC,UAAU,MAAKG,SAAA,CAClBC,cAAA,UAAQJ,UAAU,SAAQG,SACxBrC,eAAA,OAAKkC,UAAU,iBAAgBG,SAAA,CAC7BrC,eAAA,OAAKkC,UAAU,WAAUG,SAAA,CACvBC,cAAA,MAAAD,SAAI,uBACJC,cAAA,KAAGJ,UAAU,SAAQG,SAAC,kDAExBC,cAAA,OAAKJ,UAAU,iBAAgBG,SAC7BC,cAAA,OAAKsG,IAAI,YAAYwI,IAAI,OAAOlP,UAAU,gBAK7C6E,GAASzE,cAAA,OAAKJ,UAAU,gBAAeG,SAAE0E,IAEzC8I,EACGvN,cAAA,OAAKJ,UAAU,kBAAiBG,SAChCrC,eAAA,OAAKkC,UAAU,UAASG,SAAA,CACtBrC,eAAA,OAAKkC,UAAU,eAAcG,SAAA,CAAC,oEAE5BC,cAAA,OAAKJ,UAAU,WAAUG,SAAC,0EAE5BC,cAAA,OAAKJ,UAAU,qBAAoBG,SACjCC,cAAA,OACEJ,UAAU,eACVwB,MAAO,CAAE6G,MAAO,GAAGyF,UAGvBhQ,eAAA,OAAKkC,UAAU,sBAAqBG,SAAA,CAAE2N,EAAS,YAIlDZ,EAAaxJ,QAGZtD,cAACoD,EAAe,CACdE,QAASwJ,EAAaxJ,QACtBC,SAAUuJ,EAAavJ,SACvBC,SAAUsJ,EAAatJ,SACvBC,SA3NYtD,IACtB,IAAK2M,EAAaE,eAAgB,OAGlC,MAAM7K,EAAMD,KAAKC,MACX4M,EAAkBnB,EAAQa,gBAAgBtO,GAEhD,GAAI4O,GAAmBA,EAAgBnN,UAAYO,EAqBjD,OAnBA4K,GAAgBtK,IAAI,IACfA,EACHyK,YAAa,IACRzK,EAAKyK,YACR,CAAC/M,GAAO4O,GAEV9B,iBAAkB,IACbxK,EAAKwK,iBACR,CAAC9M,GAAO4O,EAAgBH,kBAK5BxB,EAAgB,CACdC,MAAM,EACN3L,UAAWqN,EAAgBrN,UAC3B4L,eAAgBnN,EAChByB,UAAWmN,EAAgBnN,YAY/BwL,EAN4B,CAC1BC,MAAM,EACN3L,UAAW,GACX4L,eAAgBnN,EAChByB,UAAW,OAIb,MAAMoN,EDtJqBC,EAACxD,EAAaC,EAAchB,KACzD,MACMC,EAAKH,EADC,GAAGD,gBAAuBkB,kBAA4BC,IACvBhB,GAErCwE,EAAgB,SAACzC,GAA+B,IAAzB0C,EAAYtE,UAAAtO,OAAA,QAAAuO,IAAAD,UAAA,GAAAA,UAAA,GAAG,KAC1C,IACE,OAAOV,KAAKiE,MAAM3B,EACpB,CAAE,MAAOhI,GAAQ,IAAD2K,EAGd,OAFgB,QAAhBA,EAAA1E,EAASY,eAAO,IAAA8D,GAAhBA,EAAA7D,KAAAb,EAAmB,wCACnBC,EAAGU,QACI8D,CACT,CACF,EAuCA,OApCAxE,EAAG0E,iBAAiB,WAAY1R,IAC9B,MAAM8O,EAAOyC,EAAcvR,EAAE8O,MACU,IAAD6C,EAA9B,OAAJ7C,QAAI,IAAJA,KAAM/K,WAAiB,OAAJ+K,QAAI,IAAJA,KAAMmC,UACP,QAApBU,EAAA5E,EAAS6E,mBAAW,IAAAD,GAApBA,EAAA/D,KAAAb,EAAuB+B,EAAK/K,UAAW+K,EAAKmC,SAC9C,IAGFjE,EAAG0E,iBAAiB,mBAAmB,KAAO,IAADG,EACnB,QAAxBA,EAAA9E,EAAS+E,uBAAe,IAAAD,GAAxBA,EAAAjE,KAAAb,EAA4B,IAI9BC,EAAG0E,iBAAiB,UAAW1R,IAC7B,MAAM8O,EAAOyC,EAAcvR,EAAE8O,MACT,IAADiD,EAAX,OAAJjD,QAAI,IAAJA,KAAME,UACgB,QAAxB+C,EAAAhF,EAASiF,uBAAe,IAAAD,GAAxBA,EAAAnE,KAAAb,EAA2B+B,EAAKE,SAClC,IAGFhC,EAAG0E,iBAAiB,cAAc,KAAO,IAADO,EAChB,QAAtBA,EAAAlF,EAASmF,qBAAa,IAAAD,GAAtBA,EAAArE,KAAAb,GACAC,EAAGU,OAAO,IAGZV,EAAG0E,iBAAiB,SAAU1R,IAC5B,GAAIA,EAAE8O,KAAM,CACV,MAAMA,EAAOyC,EAAcvR,EAAE8O,MACT,IAADqD,EAEZC,EAFC,OAAJtD,QAAI,IAAJA,KAAMG,QACQ,QAAhBkD,EAAApF,EAASY,eAAO,IAAAwE,GAAhBA,EAAAvE,KAAAb,EAAmB+B,EAAKG,SAER,QAAhBmD,EAAArF,EAASY,eAAO,IAAAyE,GAAhBA,EAAAxE,KAAAb,EAAmB,uCAEvB,CACAC,EAAGU,OAAO,IAGLV,CAAE,ECmGWsE,CAAgBnC,EAAaE,eAAgB7M,EAAM,CACnEoP,YAAaA,CAAC7N,EAAWkN,KACvB,MAAMhN,EAAYM,KAAKC,MAAQ,IAGzB+K,EAAc,CAClBxL,YACAkN,UACAhN,YACAoO,UAAW9N,KAAKC,OAIlBiL,GAAgB3K,IAAI,IACfA,EACHf,YACAE,gBAGFmL,GAAgBtK,IAAI,IACfA,EACHwK,iBAAkB,IACbxK,EAAKwK,iBACR,CAAC9M,GAAOyO,GAEV1B,YAAa,IACRzK,EAAKyK,YACR,CAAC/M,GAAO+M,OAKZU,EAAQU,gBAAgBnO,EAAM+M,EAAY,EAE5CyC,gBAAkBM,IAChBlD,GAAgBtK,IAAI,IACfA,EACHe,SAAU,IACLf,EAAKe,SACR,CAACrD,IAAQsC,EAAKe,SAASrD,IAAS,IAAM8P,MAEvC,EAELR,gBAAiBA,KAEf1C,GAAgBtK,IAAI,IACfA,EACHc,SAAU,IAAKd,EAAKc,SAAU,CAACpD,IAAO,GACtC+M,YAAa,IAAKzK,EAAKyK,YAAa,CAAC/M,GAAO,UAE9CiN,EAAgB,CAAEC,MAAM,EAAO3L,UAAW,GAAI4L,eAAgB,KAAM1L,UAAW,OAG/EgM,EAAQU,gBAAgBnO,EAAM,KAAK,EAErC0P,cAAeA,OAGfvE,QAAUsB,IACRlI,EAASkI,GAAW,wCACpBQ,EAAgB,CAAEC,MAAM,EAAO3L,UAAW,GAAI4L,eAAgB,KAAM1L,UAAW,MAAO,IAI1F6L,EAAMuB,EAAU,EAoHNtL,UAlSYiC,UACtB,IACE,IAAKmH,EAAaE,iBAAmBF,EAAaG,iBAAiB9M,GACjE,MAAM,IAAI+H,MAAM,8FAGlBsF,GAAW,GACX,MAAMb,QAAgBnB,EACpBsB,EAAaE,eACb7M,EACA2M,EAAaG,iBAAiB9M,IAGhC4M,GAAgBtK,IAAI,IACfA,EACHe,SAAU,IACLf,EAAKe,SACR,CAACrD,GAAOwM,MAGd,CAAE,MAAOlI,GACPC,EAASD,EAAMmI,SAAW,uCAC5B,CAAC,QACCY,GAAW,EACb,GA2QU0C,cAAehN,EACfS,SA7ScwM,KACxB,IACEpC,aAAaM,WAAW,gBACxBtB,EAAgB2B,EAClB,CAAE,MAAOjK,GACPC,EAAS,uCACX,GAwSUd,WAAYkJ,EAAaE,iBAV3BhN,cAAC5E,EAAI,CAACE,SAhQKqK,UACnB6H,GAAW,GACX9I,EAAS,IACTqI,EAAgB2B,GAChBf,EAAY,GAGZ,MAAMyC,EAAmB5N,aAAY,KACnCmL,GAAYlL,GAENA,GAAQ,IACVC,cAAc0N,GACP,IAEF3N,EAAO,GACd,GACD,KAEG4N,EDhIuBC,EAACC,EAAiB7F,KACjD,MAAMD,EAAM,GAAGF,uCAA8CiG,mBAAmBD,KAC1E5F,EAAKH,EAA2BC,EAAKC,GAqC3C,OAlCAC,EAAG0E,iBAAiB,UAAW1R,IAC7B,IAAK,IAAD8S,EACF,MAAMhE,EAAOtC,KAAKiE,MAAMzQ,EAAE8O,MACT,QAAjBgE,EAAA/F,EAASgG,gBAAQ,IAAAD,GAAjBA,EAAAlF,KAAAb,EAAoB+B,EAAKE,QAC3B,CAAE,MAAOlI,GAAQ,IAADkM,EACE,QAAhBA,EAAAjG,EAASY,eAAO,IAAAqF,GAAhBA,EAAApF,KAAAb,EAAmB,wCACnBC,EAAGU,OACL,KAGFV,EAAG0E,iBAAiB,cAAe1R,IACjC,IAAK,IAADiT,EACF,MAAMnE,EAAOtC,KAAKiE,MAAMzQ,EAAE8O,MACP,QAAnBmE,EAAAlG,EAAS9G,kBAAU,IAAAgN,GAAnBA,EAAArF,KAAAb,EAAsB+B,EAAKmC,SAC3BjE,EAAGU,OACL,CAAE,MAAO5G,GAAQ,IAADoM,EACE,QAAhBA,EAAAnG,EAASY,eAAO,IAAAuF,GAAhBA,EAAAtF,KAAAb,EAAmB,wCACnBC,EAAGU,OACL,KAGFV,EAAG0E,iBAAiB,SAAU1R,IAC5B,IACE,GAAGA,EAAE8O,KAAM,CAAC,IAADqE,EACT,MAAMrE,EAAOtC,KAAKiE,MAAMzQ,EAAE8O,MACV,QAAhBqE,EAAApG,EAASY,eAAO,IAAAwF,GAAhBA,EAAAvF,KAAAb,EAAmB+B,EAAKG,QAC1B,CACAjC,EAAGU,OACL,CAAE,MAAO5G,GAAQ,IAADsM,EACE,QAAhBA,EAAArG,EAASY,eAAO,IAAAyF,GAAhBA,EAAAxF,KAAAb,EAAmB,4BACnBC,EAAGU,OACL,KAGKV,CAAE,ECyFO2F,CAAkBC,EAAiB,CAC/CG,SAAWT,IACTlD,GAAgBtK,IAAI,IACfA,EACHa,QAASb,EAAKa,QAAU2M,MAE1BzC,GAAW,GACXG,EAAY,KACZjL,cAAc0N,EAAiB,EAEjCxM,WAAa6H,IACXsB,GAAgBtK,IAAI,IACfA,EACHuK,eAAgBvB,KACf,EAELH,QAAUsB,IACRlI,EAASkI,GAAW,wCACpBY,GAAW,GACX9K,cAAc0N,EAAiB,IAGnC3C,EAAM4C,EAAM,IAuORrQ,cAACwB,EAAY,CACXC,OAAQ0L,EAAaE,KACrB3L,UAAuB,OAAZyL,QAAY,IAAZA,OAAY,EAAZA,EAAczL,UACzBC,QAASA,IAAMyL,EAAgB,CAAEC,MAAM,EAAO3L,UAAW,GAAI4L,eAAgB,KAAM1L,UAAW,OAC9FA,UAAWuL,EAAavL,YAG5B5B,cAAA,UAAAD,SACErC,eAAA,OAAKkC,UAAU,iBAAgBG,SAAA,CAC7BC,cAAA,KAAGJ,UAAU,cAAaG,SAAC,6HAG3BC,cAAA,KAAGJ,UAAU,cAAaG,SAAC,uCASrC,EClceiR,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK9V,IAAkD,IAAjD,OAAE+V,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASnW,EACpE+V,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EAAY,GAExB,ECHWQ,IAASC,WAAWjJ,SAASkJ,eAAe,SACpDC,OACH5R,cAACqK,IAAMwH,WAAU,CAAA9R,SACfC,cAAC6M,EAAG,OAORmE,G","file":"static/js/main.2d7e9b35.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"Form_formContainer__30bom\",\"formRow\":\"Form_formRow__3daMv\",\"formRow1\":\"Form_formRow1__XS48M\",\"formRow3\":\"Form_formRow3__3AhXh\",\"inputGroup\":\"Form_inputGroup__EaPaw\",\"underlineInput\":\"Form_underlineInput__1EWfm\",\"optional\":\"Form_optional__5hbdU\",\"buttonGroup\":\"Form_buttonGroup__7LocG\",\"choiceButton\":\"Form_choiceButton__MMaii\",\"active\":\"Form_active__TTwYc\",\"dateSelectGroup\":\"Form_dateSelectGroup__32CjE\",\"dateSelect\":\"Form_dateSelect__3YUVx\",\"timeSelectGroup\":\"Form_timeSelectGroup__3IR3b\",\"underlineSelect\":\"Form_underlineSelect__1jtox\",\"citySelect\":\"Form_citySelect__3SZdv\",\"submitButton\":\"Form_submitButton__1NJMU\"};","import React, { useState } from 'react';\r\nimport styles from './Form.module.css';\r\nimport citydata from \"./city.json\"\r\n\r\nconst Form = ({ onSubmit }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    gender: '男', // 设置默认值\r\n    calendarType: '公历', // 设置默认值\r\n    year: '',\r\n    month: '',\r\n    day: '',\r\n    hour: '00',\r\n    minute: '00',\r\n    province: '',\r\n    city: ''\r\n  });\r\n\r\n  // 生成年份选项（1900-2050）\r\n  const years = Array.from({length: 151}, (_, i) => 1900 + i);\r\n  // const months = Array.from({length: 12}, (_, i) => i + 1);\r\n  const days = Array.from({length: 31}, (_, i) => i + 1);\r\n  // 农历月份选项，包括可能的闰月\r\n  const updateMonthOptions = () => {\r\n    if (formData.calendarType === '农历') {\r\n      return [\r\n        '正月', '二月', '三月', '四月', '五月', '六月',\r\n        '七月', '八月', '九月', '十月', '十一月', '十二月',\r\n        '闰正月', '闰二月', '闰三月', '闰四月', '闰五月', '闰六月',\r\n        '闰七月', '闰八月', '闰九月', '闰十月', '闰十一月', '闰十二月'\r\n      ];\r\n    }\r\n    return Array.from({length: 12}, (_, i) => i + 1);\r\n  };\r\n  \r\n  // 生成时间选项\r\n  const hours = Array.from({length: 24}, (_, i) => i.toString().padStart(2, '0'));\r\n  const minutes = Array.from({length: 60}, (_, i) => i.toString().padStart(2, '0'));\r\n  //设置省份、城市规则\r\n  const provinces = citydata.city.filter(item => item.pid === 0);\r\n  const cities = citydata.city.filter(item => item.pid !== 0);\r\n\r\n  const handleProvinceChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      province: e.target.value,\r\n      city: 'unknown'\r\n    });\r\n  };\r\n\r\n  const handleCityChange = (e) => {\r\n    setFormData({ ...formData, city: e.target.value });\r\n  };\r\n\r\n  const filteredCities = cities.filter(city => {\r\n    const selectedProvince = provinces.find(prov => prov.name === formData.province);\r\n    return selectedProvince && city.pid === selectedProvince.id;\r\n  });\r\n  \r\n\r\n// 确保在组件顶部定义了handleSubmit函数\r\nconst handleSubmit = (e) => {\r\n  e.preventDefault(); // 必须阻止默认行为\r\n  // console.log('提交数据：', formData);\r\n  \r\n  // 添加基础验证\r\n  if (!formData.year || !formData.month || !formData.day) {\r\n    alert('请选择完整的出生日期');\r\n    return;\r\n  }\r\n  if (formData.province === 'unknown' || formData.city === 'unknown') {\r\n    alert('请选择完整的地区信息');\r\n    return;\r\n  }\r\n\r\n  //性别判断\r\n  let genders\r\n  if (formData.gender === '男') { \r\n    genders = 0;\r\n  }else {\r\n      genders = 1;\r\n    }\r\n  //农历转公历\r\n  // 月份映射表\r\n  const monthMap = {\r\n    '正月': 1, '二月': 2, '三月': 3, '四月': 4, '五月': 5, '六月': 6,\r\n    '七月': 7, '八月': 8, '九月': 9, '十月': 10, '十一月': 11, '十二月': 12,\r\n    '闰正月': 1, '闰二月': 2, '闰三月': 3, '闰四月': 4, '闰五月': 5, '闰六月': 6,\r\n    '闰七月': 7, '闰八月': 8, '闰九月': 9, '闰十月': 10, '闰十一月': 11, '闰十二月': 12\r\n  };\r\n\r\n  let solarDate;\r\n  let lunarMonth = monthMap[formData.month]; \r\n  let isLeap = false;\r\n  if (formData.calendarType === '农历') {\r\n    // console.log('确定农历日期：', formData.year, lunarMonth, formData.day);\r\n    if (formData.month.startsWith('闰')) {\r\n      isLeap = true;\r\n    }\r\n    const lunarDate = window.p.Lunar2Solar(formData.year, lunarMonth, formData.day, isLeap);\r\n    // console.log('转换后的公历日期：', lunarDate);\r\n    if (lunarDate === false) {\r\n      alert('请检查农历日期是否正确');\r\n      return;\r\n    }\r\n    solarDate = { year: lunarDate[0], month: lunarDate[1], day: lunarDate[2] };\r\n    \r\n    // console.log('转换后的公历日期：', solarDate);\r\n  } else {\r\n    solarDate =  { year: formData.year, month: formData.month, day: formData.day }; // 公历下直接使用原月份值\r\n  }\r\n  //经纬度\r\n  const selectedCity = cities.find(c => c.name === formData.city);\r\n  if (!selectedCity) {\r\n    alert('请选择有效的城市信息');\r\n    return;\r\n  }\r\n  const J = selectedCity.j;\r\n  const W = selectedCity.w;\r\n  //八字排盘\r\n  const eightCharacters = window.p.fatemaps(\r\n    genders,\r\n    solarDate.year,\r\n    solarDate.month,\r\n    solarDate.day,\r\n    parseInt(formData.hour),\r\n    parseInt(formData.minute),\r\n    0,\r\n    J,\r\n    W\r\n  );\r\n \r\n  const transformUserData = (raw, datetimeStr) => {\r\n    let txt = \"\";\r\n    // 生成八字信息\r\n      // 添加出生时间信息\r\n    txt += \"出生时间：\" + datetimeStr + \"\\n\";\r\n    txt += \"八字：\";\r\n    txt += raw.sz.join(', ') + \"\\n\";\r\n    // 生成性别信息\r\n    txt += \"性别：\" + raw.xb + \"\\n\";\r\n    // 生成大运信息\r\n    txt += \"大运：\";\r\n    let dyItems = [];\r\n    // 限制遍历5次\r\n    for (let i = 0; i < 7 && raw['dy'] && i < Object.keys(raw['dy']).length; i++) {\r\n      let a = raw['dy'][i];\r\n      dyItems.push(`${a['zfma']}${a['zfmb']}`);\r\n    }\r\n    txt += dyItems.length > 0 ? dyItems.join(', ') + \"\\n\" : \"无大运数据\\n\";\r\n    return txt; // 确保函数返回生成的文本\r\n  };\r\n  \r\n  // console.log(eightCharacter);\r\n  const datetimeStr = [\r\n    formData.name,\r\n    solarDate.year,\r\n    solarDate.month,\r\n    solarDate.day,\r\n    `${parseInt(formData.hour)}:${parseInt(formData.minute).toString().padStart(2, '0')}`\r\n  ].join('/');\r\n  const eightCharacter = transformUserData(eightCharacters,datetimeStr);\r\n  // console.log(eightCharacter);\r\n  onSubmit( eightCharacter); // 确保父组件传递了onSubmit\r\n};\r\n\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={styles.formContainer}>\r\n      {/* 姓名行 */}\r\n      <div className={styles.formRow}>\r\n        <div className={styles.inputGroup}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"请输入您的姓名（选填）\"\r\n            className={styles.underlineInput}\r\n            value={formData.name}\r\n            onChange={(e) => setFormData({...formData, name: e.target.value})}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* 性别和历法选择行 */}\r\n      <div className={styles.formRow}>\r\n        <div className={styles.buttonGroup}>\r\n          {['男', '女'].map((gender) => (\r\n            <button\r\n              key={gender}\r\n              type=\"button\"\r\n              className={`${styles.choiceButton} ${\r\n                formData.gender === gender ? styles.active : ''\r\n              }`}\r\n              onClick={() => setFormData({...formData, gender})}\r\n            >\r\n              {gender}\r\n            </button>\r\n          ))}\r\n        </div>\r\n        <div className={styles.buttonGroup}>\r\n          {['公历', '农历'].map((type) => (\r\n            <button\r\n              key={type}\r\n              type=\"button\"\r\n              className={`${styles.choiceButton} ${\r\n                formData.calendarType === type ? styles.active : ''\r\n              }`}\r\n              onClick={() => setFormData({...formData, calendarType: type})}\r\n            >\r\n              {type}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* 出生日期选择行 */}\r\n      <div className={styles.formRow1}>\r\n        <div className={styles.dateSelectGroup}>\r\n        <select \r\n            value={formData.year}\r\n            onChange={(e) => setFormData({...formData, year: e.target.value})}\r\n            className={styles.dateSelect}\r\n          >\r\n            <option value=\"\">年</option>\r\n            {years.map((year) => (\r\n              <option key={year} value={year}>{year}</option>\r\n            ))}\r\n          </select>\r\n          <select\r\n            value={formData.month}\r\n            onChange={(e) => setFormData({...formData, month: e.target.value})}\r\n            className={styles.dateSelect}\r\n          >\r\n            <option value=\"\">月</option>\r\n            {updateMonthOptions().map((month, index) => (\r\n              <option key={index} value={month}>{month}</option>\r\n            ))}\r\n          </select>\r\n          <select\r\n            value={formData.day}\r\n            onChange={(e) => setFormData({...formData, day: e.target.value})}\r\n            className={styles.dateSelect}\r\n          >\r\n            <option value=\"\">日</option>\r\n            {days.map((day) => (\r\n              <option key={day} value={day}>{day}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 出生时间选择 */}\r\n      <div className={styles.formRow}>\r\n        <div className={styles.timeSelectGroup}>\r\n          <select\r\n            value={formData.hour}\r\n            onChange={(e) => setFormData({...formData, hour: e.target.value})}\r\n            className={styles.dateSelect}\r\n          >\r\n            {hours.map((hour) => (\r\n              <option key={hour} value={hour}>{hour}时</option>\r\n            ))}\r\n          </select>\r\n  \r\n          <select\r\n            value={formData.minute}\r\n            onChange={(e) => setFormData({...formData, minute: e.target.value})}\r\n            className={styles.dateSelect}\r\n          >\r\n            {minutes.map((minute) => (\r\n              <option key={minute} value={minute}>{minute}分</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 省市联动选择行 */}\r\n  \r\n      <div className={styles.formRow3}>\r\n        <select\r\n          value={formData.province}\r\n          onChange={handleProvinceChange}\r\n          className={styles.underlineInput}\r\n          style={{ marginRight: '20px' }}\r\n        >\r\n          <option value=\"unknown\">选择省份</option>\r\n          {provinces.map(province => (\r\n            <option key={province.id} value={province.name}>{province.name}</option>\r\n          ))}\r\n        </select>\r\n\r\n        <select\r\n          value={formData.city}\r\n          onChange={handleCityChange}\r\n          className={styles.underlineInput}\r\n          disabled={!formData.province || formData.province === 'unknown'}\r\n        >\r\n          <option value=\"unknown\">\r\n            {formData.province === 'unknown' ? '先选择省份' : '选择城市'}\r\n          </option>\r\n          {filteredCities.map(city => (\r\n            <option key={city.id} value={city.name}>{city.name}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n          \r\n\r\n      {/* 排盘按钮行 */}\r\n      <div className={styles.formRow}>\r\n        <button type=\"submit\" className={styles.submitButton}>\r\n          立即解锁命盘玄机\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;","// src/components/PaymentModal.jsx\r\nimport React, { useEffect, useState, useCallback } from 'react';\r\nimport { QRCodeSVG } from 'qrcode.react'; \r\nimport PropTypes from 'prop-types';\r\nimport './PaymentModal.css';\r\n\r\nconst PaymentModal = ({ isOpen, qrcodeUrl, onClose, expiresAt }) => {\r\n  // 使用useCallback包装函数，防止它在每次渲染时都重新创建\r\n  const calculateInitialCountdown = useCallback(() => {\r\n    if (expiresAt) {\r\n      const remainingTime = Math.max(0, Math.floor((expiresAt - Date.now()) / 1000));\r\n      return remainingTime;\r\n    }\r\n    return 300; // 默认5分钟\r\n  }, [expiresAt]);\r\n  \r\n  const [countdown, setCountdown] = useState(calculateInitialCountdown());\r\n  \r\n  // 当模态框打开或expiresAt变化时重新计算倒计时\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      setCountdown(calculateInitialCountdown());\r\n    }\r\n  }, [isOpen, calculateInitialCountdown]);\r\n\r\n  // 倒计时效果\r\n  useEffect(() => {\r\n    if (!isOpen) return;\r\n\r\n    const timer = setInterval(() => {\r\n      setCountdown(prev => {\r\n        if (prev <= 0) {\r\n          clearInterval(timer);\r\n          return 0;\r\n        }\r\n        return prev - 1;\r\n      });\r\n    }, 1000);\r\n\r\n    return () => clearInterval(timer);\r\n  }, [isOpen]);\r\n\r\n  // 格式化时间显示\r\n  const formatTime = (seconds) => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"payment-modal\">\r\n      <div className=\"modal-content\">\r\n        <div className=\"modal-header\">\r\n          <h3>扫码支付 ¥0.99</h3>\r\n          <button className=\"close-button\" onClick={onClose}>×</button>\r\n        </div>\r\n        \r\n        <div className=\"qrcode-wrapper\">\r\n          {qrcodeUrl ? (\r\n            <>\r\n              <QRCodeSVG \r\n                value={qrcodeUrl} \r\n                size={200}\r\n                fgColor={countdown <= 0 ? \"#cccccc\" : \"#2d3748\"}\r\n                level=\"H\"\r\n              />\r\n              <p className=\"countdown\" style={{color: countdown <= 0 ? \"#ff0000\" : \"inherit\"}}>\r\n                {countdown <= 0 ? \"二维码已失效\" : `剩余时间: ${formatTime(countdown)}`}\r\n              </p>\r\n              {countdown <= 0 && (\r\n                <div className=\"expired-notice\">\r\n                  <p>二维码已过期，请关闭后重试</p>\r\n                  <button onClick={onClose} className=\"retry-button\">关闭重试</button>\r\n                </div>\r\n              )}\r\n            </>\r\n          ) : (\r\n            <div className=\"loading\">正在生成支付码...</div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"modal-footer\">\r\n          <p>请保存二维码，使用支付宝扫描完成支付</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nPaymentModal.propTypes = {\r\n  isOpen: PropTypes.bool.isRequired,\r\n  qrcodeUrl: PropTypes.string,\r\n  onClose: PropTypes.func.isRequired,\r\n  expiresAt: PropTypes.number\r\n};\r\n\r\nexport default PaymentModal;\r\n","import ReactMarkdown from \"react-markdown\";\r\nimport React, { useRef, useEffect, useState, useCallback } from 'react';\r\nimport html2canvas from 'html2canvas';\r\nimport './AnalysisSection.css';\r\n\r\nconst ANALYSIS_TYPES = [ \r\n  { id: 'health', name: '健康分析', icon: '❤️', color: '#ED7D31' },\r\n  { id: 'career', name: '事业分析', icon: '💼', color: '#005293' },\r\n  { id: 'wealth', name: '财运分析', icon: '💰', color: '#8064A6' },\r\n  { id: 'marriage', name: '婚姻分析', icon: '💍', color: '#A3CE27' }\r\n];\r\n\r\nconst AnalysisSection = ({ preview, unlocked, contents, onUnlock, onRefresh, onGoBack, onComplete }) => {\r\n  const [displayContent, setDisplayContent] = useState('');\r\n  const [blurContent, setBlurContent] = useState('');\r\n  const [selectedType, setSelectedType] = useState(null);\r\n  const [loadingType, setLoadingType] = useState(null);\r\n  const [isShared, setIsShared] = useState(false);\r\n  const [isCopied, setIsCopied] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [analysisProgress, setAnalysisProgress] = useState({\r\n    health: 0,\r\n    career: 0,\r\n    wealth: 0,\r\n    marriage: 0\r\n  });\r\n  const [generatingTypes, setGeneratingTypes] = useState({\r\n    health: false,\r\n    career: false, \r\n    wealth: false,\r\n    marriage: false\r\n  });\r\n  const [contentStuck, setContentStuck] = useState({\r\n    health: false,\r\n    career: false, \r\n    wealth: false,\r\n    marriage: false\r\n  });\r\n  const progressIntervals = useRef({});\r\n  const contentUpdateRef = useRef({\r\n    health: false,\r\n    career: false, \r\n    wealth: false,\r\n    marriage: false\r\n  });\r\n  const stuckTimers = useRef({});\r\n\r\n  const handleRefresh = useCallback((type) => {\r\n    onRefresh(type);\r\n    setContentStuck(prev => ({\r\n      ...prev,\r\n      [type]: false\r\n    }));\r\n  }, [onRefresh]);\r\n\r\n  const handleUnlock = useCallback(async (typeId) => {\r\n    if (unlocked[typeId] || loadingType) return;\r\n    \r\n    try {\r\n      setLoadingType(typeId);\r\n      setAnalysisProgress(prev => ({\r\n        ...prev,\r\n        [typeId]: 0\r\n      }));\r\n      \r\n      setGeneratingTypes(prev => ({\r\n        ...prev,\r\n        [typeId]: true\r\n      }));\r\n      \r\n      if (progressIntervals.current[typeId]) {\r\n        clearInterval(progressIntervals.current[typeId]);\r\n      }\r\n      \r\n      const interval = setInterval(() => {\r\n        setAnalysisProgress(prevProgress => {\r\n          const currentProgress = prevProgress[typeId];\r\n          \r\n          if (contentUpdateRef.current[typeId] || currentProgress >= 95) {\r\n            clearInterval(interval);\r\n            return prevProgress;\r\n          }\r\n          \r\n          return {\r\n            ...prevProgress,\r\n            [typeId]: Math.min(currentProgress + 1, 95)\r\n          };\r\n        });\r\n      }, 300);\r\n      \r\n      progressIntervals.current[typeId] = interval;\r\n      \r\n      await onUnlock(typeId);\r\n      setSelectedType(typeId);\r\n    } catch (error) {\r\n      setError('解锁失败，请重试');\r\n      clearInterval(progressIntervals.current[typeId]);\r\n      setAnalysisProgress(prev => ({\r\n        ...prev,\r\n        [typeId]: 0\r\n      }));\r\n      setGeneratingTypes(prev => ({\r\n        ...prev,\r\n        [typeId]: false\r\n      }));\r\n      setLoadingType(null);\r\n    }\r\n  }, [unlocked, loadingType, onUnlock]);\r\n\r\n  const handleTypeSelection = useCallback((typeId) => {\r\n    if (unlocked[typeId]) {\r\n      setSelectedType(typeId);\r\n    } else {\r\n      handleUnlock(typeId);\r\n    }\r\n  }, [unlocked, handleUnlock]);\r\n  \r\n  const contentRef = useRef(null);\r\n  const watermarkImage = useRef(new Image());\r\n  \r\n  useEffect(() => {\r\n    watermarkImage.current.src = '/qrcode.png';\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const typesToUpdate = [];\r\n    \r\n    Object.keys(contents).forEach(type => {\r\n      if (contents[type] && !contentUpdateRef.current[type] && generatingTypes[type]) {\r\n        typesToUpdate.push(type);\r\n        contentUpdateRef.current[type] = true;\r\n      }\r\n    });\r\n    \r\n    if (typesToUpdate.length > 0) {\r\n      setAnalysisProgress(prev => {\r\n        const newProgress = {...prev};\r\n        typesToUpdate.forEach(type => {\r\n          newProgress[type] = 100;\r\n        });\r\n        return newProgress;\r\n      });\r\n      \r\n      setGeneratingTypes(prev => {\r\n        const newGenerating = {...prev};\r\n        typesToUpdate.forEach(type => {\r\n          newGenerating[type] = false;\r\n        });\r\n        return newGenerating;\r\n      });\r\n      \r\n      if (typesToUpdate.includes(loadingType)) {\r\n        setLoadingType(null);\r\n      }\r\n      \r\n      typesToUpdate.forEach(type => {\r\n        if (progressIntervals.current[type]) {\r\n          clearInterval(progressIntervals.current[type]);\r\n          progressIntervals.current[type] = null;\r\n        }\r\n      });\r\n    }\r\n  }, [contents, loadingType, generatingTypes]);\r\n\r\n  useEffect(() => {\r\n    // 这个effect需要捕获当前的状态和ref，确保清理函数使用正确的值\r\n    const currentSelectedType = selectedType;\r\n    const currentGeneratingTypes = generatingTypes;\r\n    const currentContentStuck = contentStuck;\r\n    \r\n    if (currentSelectedType && currentGeneratingTypes[currentSelectedType] && !currentContentStuck[currentSelectedType]) {\r\n      if (stuckTimers.current[currentSelectedType]) {\r\n        clearTimeout(stuckTimers.current[currentSelectedType]);\r\n      }\r\n      \r\n      const timer = setTimeout(() => {\r\n        if (currentGeneratingTypes[currentSelectedType]) {\r\n          setContentStuck(prev => ({\r\n            ...prev,\r\n            [currentSelectedType]: true\r\n          }));\r\n        }\r\n      }, 30000);\r\n      \r\n      stuckTimers.current[currentSelectedType] = timer;\r\n      \r\n      // 存储当前的timer引用\r\n      const currentTimer = timer;\r\n      \r\n      return () => {\r\n        // 使用捕获的引用进行清理\r\n        clearTimeout(currentTimer);\r\n      };\r\n    }\r\n  }, [selectedType, generatingTypes, contentStuck]);\r\n\r\n  useEffect(() => {\r\n    // 保存对当前intervals和timers的引用，以在清理函数中使用\r\n    const currentProgressIntervals = { ...progressIntervals.current };\r\n    const currentStuckTimers = { ...stuckTimers.current };\r\n    \r\n    return () => {\r\n      // 使用保存的引用来清理\r\n      Object.values(currentProgressIntervals).forEach(interval => {\r\n        if (interval) clearInterval(interval);\r\n      });\r\n      \r\n      Object.values(currentStuckTimers).forEach(timer => {\r\n        if (timer) clearTimeout(timer);\r\n      });\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!preview) {\r\n      ANALYSIS_TYPES.forEach(type => {\r\n        contentUpdateRef.current[type.id] = false;\r\n      });\r\n    }\r\n  }, [preview]);\r\n\r\n  const handleShare = async () => {\r\n    try {\r\n      await navigator.clipboard.writeText(window.location.href);\r\n      setIsCopied(true);\r\n      \r\n      setTimeout(async () => {\r\n        try {\r\n          const hasShared = await window.confirm(\r\n            '链接已复制！\\n\\n请将链接分享到社交平台\\n是否已完成分享？'\r\n          );\r\n          if (hasShared) {\r\n            setIsShared(true);\r\n          }\r\n        } catch (err) {\r\n          setError('分享确认失败');\r\n        }\r\n      }, 1000);\r\n\r\n      setTimeout(() => setIsCopied(false), 3000);\r\n    } catch (err) {\r\n      setError('复制链接失败，请手动复制地址栏链接');\r\n      setTimeout(async () => {\r\n        try {\r\n          const hasShared = await window.confirm(\r\n            '请将链接分享到社交平台\\n是否已完成分享？'\r\n          );\r\n          if (hasShared) {\r\n            setIsShared(true);\r\n          }\r\n        } catch (err) {\r\n          setError('分享确认失败');\r\n        }\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  const handleScreenshot = async () => {\r\n    try {\r\n      if (!contentRef.current) {\r\n        throw new Error('内容区域未准备就绪');\r\n      }\r\n\r\n      const canvas = await html2canvas(contentRef.current, {\r\n        useCORS: true,\r\n        allowTaint: true,\r\n        logging: false,\r\n        backgroundColor: '#ffffff'\r\n      });\r\n\r\n      const watermarkCanvas = document.createElement('canvas');\r\n      const ctx = watermarkCanvas.getContext('2d');\r\n      \r\n      watermarkCanvas.width = canvas.width;\r\n      watermarkCanvas.height = canvas.height;\r\n      \r\n      ctx.drawImage(canvas, 0, 0);\r\n      \r\n      ctx.fillStyle = '#FF0000';\r\n      ctx.font = 'bold 48px Microsoft YaHei';\r\n      ctx.textAlign = 'center';\r\n      ctx.textBaseline = 'top';\r\n      ctx.fillText('🌟 本报告由深智AI命理引擎生成 | www.mingli.xin', canvas.width / 2, 30);\r\n\r\n      if (watermarkImage.current.complete) {\r\n        ctx.globalAlpha = 0.8;\r\n        ctx.drawImage(\r\n          watermarkImage.current,\r\n          canvas.width - 300,\r\n          100,\r\n          284,\r\n          318\r\n        );\r\n      }\r\n\r\n      const finalUrl = watermarkCanvas.toDataURL('image/png');\r\n      \r\n      const fileName = `命理分析报告_${new Date().toLocaleDateString()}.png`;\r\n      const link = document.createElement('a');\r\n      link.href = finalUrl;\r\n      link.download = fileName;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n\r\n    } catch (error) {\r\n      setError('生成报告失败，请稍后重试');\r\n    }\r\n  };\r\n  \r\n  useEffect(() => {\r\n    if (typeof preview === 'string' && preview.length > 0) {\r\n      const splitIndex = Math.floor(preview.length * 0.9);\r\n      setDisplayContent(preview.slice(0, splitIndex));\r\n      setBlurContent(preview.slice(splitIndex));\r\n    }\r\n  }, [preview]);\r\n\r\n  return (\r\n    <div className=\"analysis-container\" ref={contentRef}>\r\n      {error && (\r\n        <div className=\"error-message\" onClick={() => setError('')}>\r\n          ❌ {error}\r\n        </div>\r\n      )}\r\n\r\n      <h2>基础命理分析</h2>\r\n\r\n      {!onComplete ? (\r\n        <ReactMarkdown>{preview}</ReactMarkdown>\r\n      ) : (\r\n        <div className=\"preview-section\">\r\n          <ReactMarkdown>{displayContent}</ReactMarkdown>\r\n          {blurContent && (\r\n            <div className={`blur-section ${(selectedType || isShared) ? 'unlocked' : 'locked'}`}>\r\n              <ReactMarkdown>{blurContent}</ReactMarkdown>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {onComplete && (\r\n        <>\r\n          <div className=\"share-section\">\r\n            {!(selectedType || isShared) && (\r\n              <div className=\"share-container\">\r\n                <button \r\n                  onClick={handleShare}\r\n                  className=\"share-trigger\"\r\n                >\r\n                  🔗 复制链接分享解锁\r\n                </button>\r\n                <span className=\"tooltip\">分享给微信好友即可查看完整解析</span>\r\n              </div>\r\n            )}\r\n            \r\n            {isCopied && (\r\n              <div className=\"copied-notice\">\r\n                ✅ 链接已复制到剪贴板！\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"analysis-modules\">\r\n            {ANALYSIS_TYPES.map((type) => (\r\n              <div\r\n                key={type.id}\r\n                className={`analysis-module ${\r\n                  unlocked[type.id] ? 'unlocked' : 'locked'\r\n                } ${selectedType === type.id ? 'active' : ''}`}\r\n                style={{ backgroundColor: type.color }}\r\n                onClick={() => handleTypeSelection(type.id)}\r\n              >\r\n                <div className=\"module-header\">\r\n                  <span className=\"icon\">{type.icon}</span>\r\n                  <h3>{type.name}</h3>\r\n                </div>\r\n                <div className=\"module-status\">\r\n                  {loadingType === type.id || generatingTypes[type.id] ? (\r\n                    analysisProgress[type.id] === 0 ? (\r\n                      <div className=\"progress-text\">处理中...</div>\r\n                    ) : (\r\n                      <>\r\n                        <div className=\"analysis-progress-container\">\r\n                          <div \r\n                            className=\"analysis-progress-bar\" \r\n                            style={{ width: `${analysisProgress[type.id]}%` }}\r\n                          ></div>\r\n                        </div>\r\n                        <div className=\"analysis-progress-percentage\">{analysisProgress[type.id]}%</div>\r\n                      </>\r\n                    )\r\n                  ) : unlocked[type.id] ? (\r\n                    contents[type.id] ? '✓ 已解锁' : <div className=\"loader\" />\r\n                  ) : (\r\n                    '￥0.99解锁'\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          {selectedType && contents[selectedType] && (\r\n            <div className=\"detail-content\">\r\n              <div className=\"detail-header\">\r\n                <h3>{ANALYSIS_TYPES.find(type => type.id === selectedType)?.name}</h3>\r\n                {contentStuck[selectedType] && (\r\n                  <button\r\n                    className=\"refresh-button\"\r\n                    onClick={() => handleRefresh(selectedType)}\r\n                  >\r\n                    🔄 卡顿刷新\r\n                  </button>\r\n                )}\r\n              </div>\r\n              <ReactMarkdown>{contents[selectedType]}</ReactMarkdown>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n      <button className=\"action-button back\" onClick={onGoBack}>\r\n        ← 返回主页\r\n      </button>\r\n      <button className=\"action-button screenshot\" onClick={handleScreenshot}>\r\n        📸 截图保存\r\n      </button>\r\n\r\n      <div className=\"disclaimer\">\r\n        <p>※ 本分析由AI生成，仅供娱乐参考，不作为决策依据</p>\r\n        <p>※ 根据相关法规，所有数据将在24小时后自动删除</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst propsAreEqual = (prevProps, nextProps) => {\r\n  return (\r\n    prevProps.preview === nextProps.preview &&\r\n    prevProps.onComplete === nextProps.onComplete &&\r\n    JSON.stringify(prevProps.unlocked) === JSON.stringify(nextProps.unlocked) &&\r\n    JSON.stringify(prevProps.contents) === JSON.stringify(nextProps.contents)\r\n  );\r\n};\r\n\r\nexport default React.memo(AnalysisSection, propsAreEqual);\r\n","const BASE_URL =  \"http://8.133.207.19:5000\";\r\n\r\n// SSE连接创建函数 - 包含重连机制\r\nconst createEventSourceWithRetry = (url, handlers, maxRetries = 3) => {\r\n  let retryCount = 0;\r\n  let es;\r\n\r\n  const connect = () => {\r\n    es = new EventSource(url);\r\n    \r\n    es.onopen = () => {\r\n      retryCount = 0;\r\n    };\r\n\r\n    es.onerror = (err) => {\r\n      if (retryCount < maxRetries) {\r\n        retryCount++;\r\n        setTimeout(() => {\r\n          es.close();\r\n          connect();\r\n        }, 1000 * retryCount); // 递增重试延迟\r\n      } else {\r\n        handlers.onError?.('连接已断开,请刷新页面重试');\r\n        es.close();\r\n      }\r\n    };\r\n\r\n    return es;\r\n  };\r\n\r\n  return connect();\r\n};\r\n\r\n// 带超时的fetch函数\r\nconst fetchWithTimeout = async (url, options = {}, timeout = 30000) => {\r\n  const controller = new AbortController();\r\n  const timeoutId = setTimeout(() => controller.abort(), timeout);\r\n  \r\n  try {\r\n    const response = await fetch(url, {\r\n      ...options,\r\n      signal: controller.signal\r\n    });\r\n    clearTimeout(timeoutId);\r\n    \r\n    if (!response.ok) {\r\n      const errorText = await response.text();\r\n      throw new Error(errorText || '请求失败');\r\n    }\r\n    \r\n    return response;\r\n  } catch (error) {\r\n    if (error.name === 'AbortError') {\r\n      throw new Error('请求超时，请重试');\r\n    }\r\n    throw error;\r\n  }\r\n};\r\n\r\n// 创建八字分析SSE流\r\nexport const createOrderStream = (eightCharacters, handlers) => {\r\n  const url = `${BASE_URL}/api/orders/stream?eightCharacters=${encodeURIComponent(eightCharacters)}`;\r\n  const es = createEventSourceWithRetry(url, handlers);\r\n\r\n  // 监听不同类型的事件\r\n  es.addEventListener('stream', (e) => {\r\n    try {\r\n      const data = JSON.parse(e.data);\r\n      handlers.onStream?.(data.content);\r\n    } catch (error) {\r\n      handlers.onError?.('数据解析错误');\r\n      es.close();\r\n    }\r\n  });\r\n\r\n  es.addEventListener('stream_end', (e) => {\r\n    try {\r\n      const data = JSON.parse(e.data);\r\n      handlers.onComplete?.(data.orderId);\r\n      es.close();\r\n    } catch (error) {\r\n      handlers.onError?.('数据解析错误');\r\n      es.close();\r\n    }\r\n  });\r\n\r\n  es.addEventListener('error', (e) => {\r\n    try {\r\n      if(e.data) {\r\n        const data = JSON.parse(e.data);\r\n        handlers.onError?.(data.message);\r\n      }\r\n      es.close();\r\n    } catch (error) {\r\n      handlers.onError?.('连接错误');\r\n      es.close();\r\n    }\r\n  });\r\n\r\n  return es;\r\n};\r\n\r\n// 支付和详细分析SSE流\r\nexport const initiatePayment = (prevOrderId, analysisType, handlers) => {\r\n  const url = `${BASE_URL}/api/orders/${prevOrderId}/payment?type=${analysisType}`;\r\n  const es = createEventSourceWithRetry(url, handlers);\r\n\r\n  const safeParseJson = (data, defaultValue = null) => {\r\n    try {\r\n      return JSON.parse(data);\r\n    } catch (error) {\r\n      handlers.onError?.('数据解析错误');\r\n      es.close();\r\n      return defaultValue;\r\n    }\r\n  };\r\n\r\n  // 监听支付相关事件\r\n  es.addEventListener('payment', (e) => {\r\n    const data = safeParseJson(e.data);\r\n    if (data?.qrcodeUrl && data?.orderId) {\r\n      handlers.onPaymentQR?.(data.qrcodeUrl, data.orderId);\r\n    }\r\n  });\r\n\r\n  es.addEventListener('payment_success', () => {\r\n    handlers.onPaymentstatus?.();\r\n  });\r\n\r\n  // 监听分析内容流式传输\r\n  es.addEventListener('stream', (e) => {\r\n    const data = safeParseJson(e.data);\r\n    if (data?.content) {\r\n      handlers.onAnalysisChunk?.(data.content);\r\n    }\r\n  });\r\n\r\n  es.addEventListener('stream_end', () => {\r\n    handlers.onAnalysisEnd?.();\r\n    es.close();\r\n  });\r\n\r\n  es.addEventListener('error', (e) => {\r\n    if (e.data) {\r\n      const data = safeParseJson(e.data);\r\n      if (data?.message) {\r\n        handlers.onError?.(data.message);\r\n      } else {\r\n        handlers.onError?.('支付流程出错');\r\n      }\r\n    }\r\n    es.close();\r\n  });\r\n\r\n  return es;\r\n};\r\n\r\n// 获取分析内容\r\nexport const fetchAnalysisContent = async (prevOrderId, analysisType, analysisOrderId) => {\r\n  const url = `${BASE_URL}/api/orders/${prevOrderId}/analysis?type=${analysisType}&analysisOrderId=${analysisOrderId}`;\r\n  \r\n  try {\r\n    const response = await fetchWithTimeout(url);\r\n    const data = await response.json();\r\n    if (!data?.content) {\r\n      throw new Error('返回数据格式错误');\r\n    }\r\n    return data.content;\r\n  } catch (error) {\r\n    throw new Error('获取分析内容失败: ' + error.message);\r\n  }\r\n};","import React, { useState, useEffect, useMemo } from 'react';\nimport Form from './components/Form';\nimport PaymentModal from './components/PaymentModal';\nimport AnalysisSection from './components/AnalysisSection';\nimport './App.css';\nimport { createOrderStream, initiatePayment, fetchAnalysisContent } from './api';\n\nconst ANALYSIS_TYPES = [\n  { id: 'health', name: '健康分析' },\n  { id: 'career', name: '事业分析' },\n  { id: 'wealth', name: '财运分析' },\n  { id: 'marriage', name: '婚姻分析' }\n];\n\nfunction App() {\n  const [analysisData, setAnalysisData] = useState({\n    currentOrderId: null,\n    preview: '',\n    unlocked: {},\n    contents: {\n      health: null,\n      career: null,\n      wealth: null,\n      marriage: null\n    },\n    analysisOrderIds: {\n      health: null,\n      career: null,\n      wealth: null,\n      marriage: null\n    },\n    paymentInfo: {\n      health: null,\n      career: null,\n      wealth: null,\n      marriage: null\n    }\n  });\n  const [paymentState, setPaymentState] = useState({\n    show: false,\n    qrcodeUrl: '',\n    processingType: null,\n    expiresAt: null\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [es, setES] = useState(null);\n  const [progress, setProgress] = useState(0);\n\n  const storage = useMemo(() => ({\n    save: (data) => {\n      if (typeof data !== 'object' || data === null) {\n        setError('无法保存无效的分析数据');\n        return false;\n      }\n  \n      try {\n        localStorage.setItem('analysisData', JSON.stringify(data));\n        return true;\n      } catch (error) {\n        setError('保存数据失败，请检查浏览器存储空间');\n        return false;\n      }\n    },\n  \n    load: () => {\n      try {\n        const data = localStorage.getItem('analysisData');\n        if (!data) return null;\n  \n        const parsedData = JSON.parse(data);\n  \n        if (\n          typeof parsedData === 'object' &&\n          parsedData !== null &&\n          typeof parsedData.preview === 'string' &&\n          typeof parsedData.unlocked === 'object' &&\n          typeof parsedData.contents === 'object' &&\n          typeof parsedData.currentOrderId === 'string' &&\n          typeof parsedData.analysisOrderIds === 'object'\n        ) {\n          // 确保支付信息对象存在\n          if (!parsedData.paymentInfo) {\n            parsedData.paymentInfo = { health: null, career: null, wealth: null, marriage: null };\n          }\n          return parsedData;\n        }\n        \n        throw new Error('数据格式不正确');\n      } catch (error) {\n        localStorage.removeItem('analysisData');\n        return null;\n      }\n    },\n\n    // 新增专门处理支付信息的保存和加载方法\n    savePaymentInfo: (type, paymentInfo) => {\n      try {\n        const key = `payment_${type}`;\n        if (paymentInfo === null) {\n          localStorage.removeItem(key);\n        } else {\n          localStorage.setItem(key, JSON.stringify(paymentInfo));\n        }\n        return true;\n      } catch (error) {\n        console.error('保存支付信息失败', error);\n        return false;\n      }\n    },\n\n    loadPaymentInfo: (type) => {\n      try {\n        const key = `payment_${type}`;\n        const data = localStorage.getItem(key);\n        if (!data) return null;\n        \n        return JSON.parse(data);\n      } catch (error) {\n        localStorage.removeItem(`payment_${type}`);\n        return null;\n      }\n    }\n  }), [setError]);\n\n  const initialAnalysisState = {\n    currentOrderId: null,\n    preview: '',\n    unlocked: {},\n    contents: { health: '', career: '', wealth: '', marriage: '' },\n    analysisOrderIds: { health: null, career: null, wealth: null, marriage: null },\n    paymentInfo: { health: null, career: null, wealth: null, marriage: null }\n  };\n\n  const clearAnalysisData = () => {\n    try {\n      localStorage.removeItem('analysisData');\n      setAnalysisData(initialAnalysisState);\n    } catch (error) {\n      setError('清除数据失败');\n    }\n  };\n\n  const refreshAnalysis = async (type) => {\n    try {\n      if (!analysisData.currentOrderId || !analysisData.analysisOrderIds[type]) {\n        throw new Error('无效的订单信息，请重新生成分析');\n      }\n\n      setLoading(true);\n      const content = await fetchAnalysisContent(\n        analysisData.currentOrderId,\n        type,\n        analysisData.analysisOrderIds[type]\n      );\n\n      setAnalysisData(prev => ({\n        ...prev,\n        contents: {\n          ...prev.contents,\n          [type]: content\n        }\n      }));\n    } catch (error) {\n      setError(error.message || '刷新内容失败');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  const handleSubmit = async (eightCharacters) => {\n    setLoading(true);\n    setError('');\n    setAnalysisData(initialAnalysisState);\n    setProgress(0); // 初始化进度为0\n\n    // 设置一个模拟进度的定时器\n    const progressInterval = setInterval(() => {\n      setProgress(prev => {\n        // 进度最大到95%，留5%给实际完成\n        if (prev >= 95) {\n          clearInterval(progressInterval);\n          return 95;\n        }\n        return prev + 1;\n      });\n    }, 200); // 每200ms增加1%，大约20秒达到95%\n\n    const newES = createOrderStream(eightCharacters, {\n      onStream: (chunk) => {\n        setAnalysisData(prev => ({\n          ...prev,\n          preview: prev.preview + chunk\n        }));\n        setLoading(false);\n        setProgress(100); // 设置为100%\n        clearInterval(progressInterval); // 清除进度定时器\n      },\n      onComplete: (prevOrderId) => {\n        setAnalysisData(prev => ({\n          ...prev,\n          currentOrderId: prevOrderId\n        }));\n      },\n      onError: (message) => {\n        setError(message || '生成预览失败');\n        setLoading(false);\n        clearInterval(progressInterval); // 清除进度定时器\n      }\n    });\n    setES(newES);\n  };\n\n  const unlockAnalysis = (type) => {\n    if (!analysisData.currentOrderId) return;\n\n    // 检查是否有未过期的支付信息（从独立存储中读取）\n    const now = Date.now();\n    const existingPayment = storage.loadPaymentInfo(type);\n    \n    if (existingPayment && existingPayment.expiresAt > now) {\n      // 将支付信息同步到状态中\n      setAnalysisData(prev => ({\n        ...prev,\n        paymentInfo: {\n          ...prev.paymentInfo,\n          [type]: existingPayment\n        },\n        analysisOrderIds: {\n          ...prev.analysisOrderIds,\n          [type]: existingPayment.orderId\n        }\n      }));\n      \n      // 显示现有的支付二维码\n      setPaymentState({\n        show: true,\n        qrcodeUrl: existingPayment.qrcodeUrl,\n        processingType: type,\n        expiresAt: existingPayment.expiresAt\n      });\n      return;\n    }\n\n    // 初始化支付状态\n    const initialPaymentState = {\n      show: true,\n      qrcodeUrl: '',\n      processingType: type,\n      expiresAt: null\n    };\n    setPaymentState(initialPaymentState);\n\n    const paymentES = initiatePayment(analysisData.currentOrderId, type, {\n      onPaymentQR: (qrcodeUrl, orderId) => {\n        const expiresAt = Date.now() + 5 * 60 * 1000;\n        \n        // 创建支付信息对象\n        const paymentInfo = {\n          qrcodeUrl,\n          orderId,\n          expiresAt,\n          createdAt: Date.now()\n        };\n        \n        // 更新状态\n        setPaymentState(prev => ({ \n          ...prev, \n          qrcodeUrl,\n          expiresAt \n        }));\n        \n        setAnalysisData(prev => ({\n          ...prev,\n          analysisOrderIds: {\n            ...prev.analysisOrderIds,\n            [type]: orderId\n          },\n          paymentInfo: {\n            ...prev.paymentInfo,\n            [type]: paymentInfo\n          }\n        }));\n        \n        // 独立保存支付信息\n        storage.savePaymentInfo(type, paymentInfo);\n      },\n      onAnalysisChunk: (chunk) => {\n        setAnalysisData(prev => ({\n          ...prev,\n          contents: {\n            ...prev.contents,\n            [type]: (prev.contents[type] || '') + chunk\n          }\n        }));\n      },\n      onPaymentstatus: () => {\n        // 支付成功，更新状态并清除支付信息\n        setAnalysisData(prev => ({\n          ...prev,\n          unlocked: { ...prev.unlocked, [type]: true },\n          paymentInfo: { ...prev.paymentInfo, [type]: null }\n        }));\n        setPaymentState({ show: false, qrcodeUrl: '', processingType: null, expiresAt: null });\n        \n        // 清除独立存储的支付信息\n        storage.savePaymentInfo(type, null);\n      },\n      onAnalysisEnd: () => {\n        // 分析完成后的处理\n      },\n      onError: (message) => {\n        setError(message || '支付流程出错');\n        setPaymentState({ show: false, qrcodeUrl: '', processingType: null, expiresAt: null });\n      }\n    });\n\n    setES(paymentES);\n  };\n\n  useEffect(() => {\n    if (analysisData.preview) {\n      storage.save(analysisData);\n    }\n  }, [analysisData, storage]);\n\n  useEffect(() => {\n    const loadedData = storage.load();\n    if (loadedData) {\n      setAnalysisData(loadedData);\n    }\n\n    return () => {\n      if (es) {\n        es.close();\n      }\n    };\n  }, [es, storage]);\n\n  // 读取页面初始化时的支付信息\n  useEffect(() => {\n    // 加载所有类型的支付信息\n    ANALYSIS_TYPES.forEach(type => {\n      const paymentInfo = storage.loadPaymentInfo(type.id);\n      if (paymentInfo) {\n        // 检查是否过期\n        if (paymentInfo.expiresAt > Date.now()) {\n          setAnalysisData(prev => ({\n            ...prev,\n            paymentInfo: {\n              ...prev.paymentInfo,\n              [type.id]: paymentInfo\n            },\n            analysisOrderIds: {\n              ...prev.analysisOrderIds,\n              [type.id]: paymentInfo.orderId\n            }\n          }));\n        } else {\n          // 过期则清除\n          storage.savePaymentInfo(type.id, null);\n        }\n      }\n    });\n  }, [storage]);\n\n  // 替换原有的定时清理函数，使用更可靠的方式\n  useEffect(() => {\n    const cleanupInterval = setInterval(() => {\n      const now = Date.now();\n      \n      ANALYSIS_TYPES.forEach(type => {\n        const paymentInfo = storage.loadPaymentInfo(type.id);\n        if (paymentInfo && paymentInfo.expiresAt < now) {\n          // 支付信息已过期，清除\n          storage.savePaymentInfo(type.id, null);\n          \n          // 同时更新状态\n          setAnalysisData(prev => ({\n            ...prev,\n            paymentInfo: {\n              ...prev.paymentInfo,\n              [type.id]: null\n            }\n          }));\n        }\n      });\n    }, 30000); // 每30秒检查一次\n    \n    return () => clearInterval(cleanupInterval);\n  }, [storage]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        <div className=\"header-content\">\n          <div className=\"branding\">\n            <h1>MingLi理命</h1>\n            <p className=\"slogan\">一阴一阳之谓道</p>\n          </div>\n          <div className=\"logo-container\">\n            <img src=\"/logo.png\" alt=\"Logo\" className=\"logo\" />\n          </div>\n        </div>\n      </header>\n\n        {error && <div className=\"error-message\">{error}</div>}\n        \n        {loading ? (\n            <div className=\"loading-wrapper\">\n            <div className=\"loading\">\n              <div className=\"loading-text\">\n                ⏳ 深度分析通常需要 30 秒\n                <div className=\"sub-hint\">（期间请不要刷新页面）</div>\n              </div>\n              <div className=\"progress-container\">\n                <div \n                  className=\"progress-bar\" \n                  style={{ width: `${progress}%` }}\n                ></div>\n              </div>\n              <div className=\"progress-percentage\">{progress}%</div>\n            </div>\n          </div>\n        ) : (\n          !analysisData.preview ? (\n            <Form onSubmit={handleSubmit} />\n          ) : (\n            <AnalysisSection\n              preview={analysisData.preview}\n              unlocked={analysisData.unlocked}\n              contents={analysisData.contents}\n              onUnlock={unlockAnalysis}\n              onRefresh={refreshAnalysis}\n              analysisTypes={ANALYSIS_TYPES}\n              onGoBack={clearAnalysisData}\n              onComplete={analysisData.currentOrderId}\n            />\n          )\n        )}\n\n        <PaymentModal\n          isOpen={paymentState.show}\n          qrcodeUrl={paymentState?.qrcodeUrl}\n          onClose={() => setPaymentState({ show: false, qrcodeUrl: '', processingType: null, expiresAt: null })}\n          expiresAt={paymentState.expiresAt}\n        />\n    \n      <footer>\n        <div className=\"sfooterContent\">\n          <p className=\"sdisclaimer\">\n            拒绝向未成年人提供服务，仅供娱乐和参考。\n          </p>\n          <p className=\"sdisclaimer\">\n          ©2025 MingLi理命\n          </p>\n        </div>\n      </footer>\n\n    </div>\n    \n  );\n}\n\nexport default App;\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}